GAS LISTING /tmp/ccqmVd4y.s 			page 1


   1              		.file	"exceptionHandler.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 766F6964 		.string	"void exceptionHandler()"
   9      20657863 
   9      65707469 
   9      6F6E4861 
   9      6E646C65 
  10              		.align	3
  11              	.LC1:
  12 0018 7372632F 		.string	"src/exceptionHandler.cpp"
  12      65786365 
  12      7074696F 
  12      6E48616E 
  12      646C6572 
  13 0031 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0038 66616C73 		.string	"false"
  15      6500
  16              		.text
  17              		.align	2
  18              		.globl	exceptionHandler
  20              	exceptionHandler:
  21              	.LFB1:
  22              		.file 1 "src/exceptionHandler.cpp"
   1:src/exceptionHandler.cpp **** /**
   2:src/exceptionHandler.cpp ****  * @file trap.cpp
   3:src/exceptionHandler.cpp ****  * @author stcksmsh (vukicevickosta@gmail.com)
   4:src/exceptionHandler.cpp ****  * @brief implementation of the trap method
   5:src/exceptionHandler.cpp ****  * @version 0.1
   6:src/exceptionHandler.cpp ****  * @date 2023-12-31
   7:src/exceptionHandler.cpp ****  * 
   8:src/exceptionHandler.cpp ****  * @copyright Copyright (c) 2023
   9:src/exceptionHandler.cpp ****  * 
  10:src/exceptionHandler.cpp ****  */
  11:src/exceptionHandler.cpp **** 
  12:src/exceptionHandler.cpp **** #include "heapManager.h"
  13:src/exceptionHandler.cpp **** #include "console.h"
  14:src/exceptionHandler.cpp **** #include "thread.h"
  15:src/exceptionHandler.cpp **** #include "sem.h"
  16:src/exceptionHandler.cpp **** #include "timer.h"
  17:src/exceptionHandler.cpp **** #include "assert.h"
  18:src/exceptionHandler.cpp **** 
  19:src/exceptionHandler.cpp **** 
  20:src/exceptionHandler.cpp **** extern "C" void exceptionHandler(){
  23              		.loc 1 20 35
  24              		.cfi_startproc
  25 0000 130101FC 		addi	sp,sp,-64
  26              		.cfi_def_cfa_offset 64
  27 0004 233C1102 		sd	ra,56(sp)
  28 0008 23388102 		sd	s0,48(sp)
GAS LISTING /tmp/ccqmVd4y.s 			page 2


  29 000c 23349102 		sd	s1,40(sp)
  30 0010 23302103 		sd	s2,32(sp)
  31 0014 233C3101 		sd	s3,24(sp)
  32 0018 23384101 		sd	s4,16(sp)
  33 001c 23345101 		sd	s5,8(sp)
  34 0020 23306101 		sd	s6,0(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37              		.cfi_offset 9, -24
  38              		.cfi_offset 18, -32
  39              		.cfi_offset 19, -40
  40              		.cfi_offset 20, -48
  41              		.cfi_offset 21, -56
  42              		.cfi_offset 22, -64
  43 0024 13040104 		addi	s0,sp,64
  44              		.cfi_def_cfa 8, 0
  21:src/exceptionHandler.cpp ****     uint64 a0, a1, a2, a3, a4;
  45              		.loc 1 21 5
  22:src/exceptionHandler.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
  46              		.loc 1 22 5
  47              		.loc 1 22 45 is_stmt 0
  48              	#APP
  49              	# 22 "src/exceptionHandler.cpp" 1
  23              	    __asm__ volatile("mv %0, a3" : "=r"(a3));
  50              		mv s6, a4
  51              	# 0 "" 2
  52              	.LVL0:
  53              		.loc 1 23 5 is_stmt 1
  54              		.loc 1 23 45 is_stmt 0
  55              	# 23 "src/exceptionHandler.cpp" 1
  24              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
  56              		mv s5, a3
  57              	# 0 "" 2
  58              	.LVL1:
  59              		.loc 1 24 5 is_stmt 1
  60              		.loc 1 24 45 is_stmt 0
  61              	# 24 "src/exceptionHandler.cpp" 1
  25              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
  62              		mv s4, a2
  63              	# 0 "" 2
  64              	.LVL2:
  65              		.loc 1 25 5 is_stmt 1
  66              		.loc 1 25 45 is_stmt 0
  67              	# 25 "src/exceptionHandler.cpp" 1
  26              	    __asm__ volatile("mv %0, a0" : "=r"(a0));
  68              		mv s3, a1
  69              	# 0 "" 2
  70              	.LVL3:
  71              		.loc 1 26 5 is_stmt 1
  72              		.loc 1 26 45 is_stmt 0
  73              	# 26 "src/exceptionHandler.cpp" 1
  27              	
  74              		mv a5, a0
  75              	# 0 "" 2
  76              	.LVL4:
  28:src/exceptionHandler.cpp ****     uint64 scause;
  77              		.loc 1 28 5 is_stmt 1
GAS LISTING /tmp/ccqmVd4y.s 			page 3


  29:src/exceptionHandler.cpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  78              		.loc 1 29 5
  79              		.loc 1 29 55 is_stmt 0
  80              	# 29 "src/exceptionHandler.cpp" 1
  30              	
  81              		csrr a4, scause
  82              	# 0 "" 2
  83              	.LVL5:
  31:src/exceptionHandler.cpp ****     uint64 sstatus;
  84              		.loc 1 31 5 is_stmt 1
  32:src/exceptionHandler.cpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
  85              		.loc 1 32 5
  86              		.loc 1 32 57 is_stmt 0
  87              	# 32 "src/exceptionHandler.cpp" 1
  33              	
  88              		csrr s2, sstatus
  89              	# 0 "" 2
  90              	.LVL6:
  34:src/exceptionHandler.cpp ****     uint64 sepc;
  91              		.loc 1 34 5 is_stmt 1
  35:src/exceptionHandler.cpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
  92              		.loc 1 35 5
  93              		.loc 1 35 51 is_stmt 0
  94              	# 35 "src/exceptionHandler.cpp" 1
  36              	
  95              		csrr s1, sepc
  96              	# 0 "" 2
  97              	.LVL7:
  37:src/exceptionHandler.cpp **** 
  38:src/exceptionHandler.cpp **** 
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
  98              		.loc 1 39 5 is_stmt 1
  40:src/exceptionHandler.cpp ****     if(scause == 0x0000000000000009UL || scause == 0x0000000000000008UL){   /// check if the except
  99              		.loc 1 40 5
 100              	#NO_APP
 101              	.LBB15:
 102              		.loc 1 40 39 is_stmt 0
 103 0048 130687FF 		addi	a2,a4,-8
 104              		.loc 1 40 5
 105 004c 93061000 		li	a3,1
 106 0050 63FAC602 		bleu	a2,a3,.L32
 107              	.LBE15:
  41:src/exceptionHandler.cpp ****         switch(a0){
  42:src/exceptionHandler.cpp ****             case 0x1: /// mem_alloc
  43:src/exceptionHandler.cpp ****                 returnVal = uint64(HeapManager::getInstance().heapAllocate(a1));
  44:src/exceptionHandler.cpp ****                 break;
  45:src/exceptionHandler.cpp ****             case 0x2: /// mem_free
  46:src/exceptionHandler.cpp ****                 returnVal = HeapManager::getInstance().heapFree((void*)a1);
  47:src/exceptionHandler.cpp ****                 break;
  48:src/exceptionHandler.cpp ****             case 0x11: /// thread_create
  49:src/exceptionHandler.cpp ****                 // returnVal = _thread::create((thread_t*)a1, (void(*)(void*))a2, (void*)a3, (void*
  50:src/exceptionHandler.cpp ****                 // for(int  i = 15; i >= 0 ; i --){
  51:src/exceptionHandler.cpp ****                 //     int dig = (a4 >> (4 * i)) & 0xf;
  52:src/exceptionHandler.cpp ****                 //     if(dig < 10)__putc('0' + dig);
  53:src/exceptionHandler.cpp ****                 //     if(dig >= 10) __putc('A' + dig - 10);
  54:src/exceptionHandler.cpp ****                 // }
  55:src/exceptionHandler.cpp ****                 __putc('\0');
GAS LISTING /tmp/ccqmVd4y.s 			page 4


  56:src/exceptionHandler.cpp ****                 returnVal = _thread::create((thread_t*)a1, (void(*)(void*))a2, (void*)a3, (void*)a4
  57:src/exceptionHandler.cpp ****                 break;
  58:src/exceptionHandler.cpp ****             case 0x12: /// thread_exit
  59:src/exceptionHandler.cpp ****                 returnVal = _thread::currentThread->exit();
  60:src/exceptionHandler.cpp ****                 break;
  61:src/exceptionHandler.cpp ****             case 0x13: /// thread_dispatch
  62:src/exceptionHandler.cpp ****                 _thread::dispatch();
  63:src/exceptionHandler.cpp ****                 break;
  64:src/exceptionHandler.cpp ****             case 0x14: /// thread_join
  65:src/exceptionHandler.cpp ****                 _thread::currentThread->join((thread_t)a1);
  66:src/exceptionHandler.cpp ****                 break;
  67:src/exceptionHandler.cpp ****             case 0x21: /// sem_open
  68:src/exceptionHandler.cpp ****                 _sem::open((sem_t*)a1, unsigned(a2));
  69:src/exceptionHandler.cpp ****                 break;
  70:src/exceptionHandler.cpp ****             case 0x22: /// sem_close
  71:src/exceptionHandler.cpp ****                 _sem::close((sem_t)a1);
  72:src/exceptionHandler.cpp ****                 break;
  73:src/exceptionHandler.cpp ****             case 0x23: /// sem_wait
  74:src/exceptionHandler.cpp ****                 _sem::wait((sem_t)a1);
  75:src/exceptionHandler.cpp ****                 break;
  76:src/exceptionHandler.cpp ****             case 0x24: /// sem_signal
  77:src/exceptionHandler.cpp ****                 _sem::signal((sem_t)a1);
  78:src/exceptionHandler.cpp ****                 break;
  79:src/exceptionHandler.cpp ****             case 0x31: /// time_sleep
  80:src/exceptionHandler.cpp ****                 returnVal = Timer::getInstance().sleep(a1);
  81:src/exceptionHandler.cpp ****                 break;
  82:src/exceptionHandler.cpp ****             case 0x41:
  83:src/exceptionHandler.cpp ****                 returnVal = __getc();
  84:src/exceptionHandler.cpp ****                 break;
  85:src/exceptionHandler.cpp ****             case 0x42:
  86:src/exceptionHandler.cpp ****                 __putc(a1);
  87:src/exceptionHandler.cpp ****                 break;
  88:src/exceptionHandler.cpp ****         }
  89:src/exceptionHandler.cpp ****         __asm__ volatile("mv a0, %0" : : "r"(returnVal));
  90:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc+4));
  91:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
  92:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
  93:src/exceptionHandler.cpp ****     }
  94:src/exceptionHandler.cpp ****     else if (scause == 0x0000000000000005UL){   // illegal read operation
 108              		.loc 1 94 10 is_stmt 1
 109              	.LBB33:
 110              	.LBB16:
 111 0054 93075000 		li	a5,5
 112              	.LVL8:
 113 0058 630EF71A 		beq	a4,a5,.L33
 114              	.LBE16:
 115              	.LBE33:
  95:src/exceptionHandler.cpp ****         __putc('\n');
  96:src/exceptionHandler.cpp ****         __putc('E');
  97:src/exceptionHandler.cpp ****         __putc('r');
  98:src/exceptionHandler.cpp ****         __putc('r');
  99:src/exceptionHandler.cpp ****         __putc('o');
 100:src/exceptionHandler.cpp ****         __putc('r');
 101:src/exceptionHandler.cpp ****         __putc(':');
 102:src/exceptionHandler.cpp ****         __putc(' ');
 103:src/exceptionHandler.cpp ****         __putc('i');
 104:src/exceptionHandler.cpp ****         __putc('l');
GAS LISTING /tmp/ccqmVd4y.s 			page 5


 105:src/exceptionHandler.cpp ****         __putc('l');
 106:src/exceptionHandler.cpp ****         __putc('e');
 107:src/exceptionHandler.cpp ****         __putc('g');
 108:src/exceptionHandler.cpp ****         __putc('a');
 109:src/exceptionHandler.cpp ****         __putc('l');
 110:src/exceptionHandler.cpp ****         __putc(' ');
 111:src/exceptionHandler.cpp ****         __putc('r');
 112:src/exceptionHandler.cpp ****         __putc('e');
 113:src/exceptionHandler.cpp ****         __putc('a');
 114:src/exceptionHandler.cpp ****         __putc('d');
 115:src/exceptionHandler.cpp ****         __putc('!');
 116:src/exceptionHandler.cpp ****         uint64 pc;
 117:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 118:src/exceptionHandler.cpp ****         __putc('\n');
 119:src/exceptionHandler.cpp ****         __putc('P');
 120:src/exceptionHandler.cpp ****         __putc('C');
 121:src/exceptionHandler.cpp ****         __putc(':');
 122:src/exceptionHandler.cpp ****         __putc(' ');
 123:src/exceptionHandler.cpp ****         __putc('0');
 124:src/exceptionHandler.cpp ****         __putc('x');
 125:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 126:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 127:src/exceptionHandler.cpp ****             if(tmp < 10){
 128:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 129:src/exceptionHandler.cpp ****             }else{
 130:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 131:src/exceptionHandler.cpp ****             }
 132:src/exceptionHandler.cpp ****         }
 133:src/exceptionHandler.cpp ****         assert(false);
 134:src/exceptionHandler.cpp ****     }
 135:src/exceptionHandler.cpp ****     else if (scause == 0x0000000000000007UL){   // illegal write operation
 116              		.loc 1 135 10
 117              	.LBB34:
 118              	.LBB27:
 119              	.LBB17:
 120 005c 93077000 		li	a5,7
 121 0060 6308F736 		beq	a4,a5,.L34
 136:src/exceptionHandler.cpp ****         __putc('\n');
 137:src/exceptionHandler.cpp ****         __putc('E');
 138:src/exceptionHandler.cpp ****         __putc('r');
 139:src/exceptionHandler.cpp ****         __putc('r');
 140:src/exceptionHandler.cpp ****         __putc('o');
 141:src/exceptionHandler.cpp ****         __putc('r');
 142:src/exceptionHandler.cpp ****         __putc(':');
 143:src/exceptionHandler.cpp ****         __putc(' ');
 144:src/exceptionHandler.cpp ****         __putc('i');
 145:src/exceptionHandler.cpp ****         __putc('l');
 146:src/exceptionHandler.cpp ****         __putc('l');
 147:src/exceptionHandler.cpp ****         __putc('e');
 148:src/exceptionHandler.cpp ****         __putc('g');
 149:src/exceptionHandler.cpp ****         __putc('a');
 150:src/exceptionHandler.cpp ****         __putc('l');
 151:src/exceptionHandler.cpp ****         __putc(' ');
 152:src/exceptionHandler.cpp ****         __putc('w');
 153:src/exceptionHandler.cpp ****         __putc('r');
 154:src/exceptionHandler.cpp ****         __putc('i');
 155:src/exceptionHandler.cpp ****         __putc('t');
GAS LISTING /tmp/ccqmVd4y.s 			page 6


 156:src/exceptionHandler.cpp ****         __putc('e');
 157:src/exceptionHandler.cpp ****         __putc('!');
 158:src/exceptionHandler.cpp ****         uint64 pc;
 159:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 160:src/exceptionHandler.cpp ****         __putc('\n');
 161:src/exceptionHandler.cpp ****         __putc('P');
 162:src/exceptionHandler.cpp ****         __putc('C');
 163:src/exceptionHandler.cpp ****         __putc(':');
 164:src/exceptionHandler.cpp ****         __putc(' ');
 165:src/exceptionHandler.cpp ****         __putc('0');
 166:src/exceptionHandler.cpp ****         __putc('x');
 167:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 168:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 169:src/exceptionHandler.cpp ****             if(tmp < 10){
 170:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 171:src/exceptionHandler.cpp ****             }else{
 172:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 173:src/exceptionHandler.cpp ****             }
 174:src/exceptionHandler.cpp ****         }        
 175:src/exceptionHandler.cpp ****         assert(false);
 176:src/exceptionHandler.cpp ****     }
 177:src/exceptionHandler.cpp ****     else if(scause == 0x8000000000000001UL){    /// timer
 122              		.loc 1 177 10
 123 0064 9307F0FF 		li	a5,-1
 124 0068 9397F703 		slli	a5,a5,63
 125 006c 93871700 		addi	a5,a5,1
 126 0070 6304F752 		beq	a4,a5,.L35
 178:src/exceptionHandler.cpp ****         __putc('.');
 179:src/exceptionHandler.cpp ****         Timer::getInstance().tick();
 180:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc));
 181:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
 182:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
 183:src/exceptionHandler.cpp ****     }else{
 184:src/exceptionHandler.cpp ****         __putc(',');
 127              		.loc 1 184 9
 128              		.loc 1 184 15 is_stmt 0
 129 0074 1305C002 		li	a0,44
 130 0078 97000000 		call	__putc@plt
 130      E7800000 
 131              	.LVL9:
 132              	.LBE17:
 133              	.LBE27:
 134              	.LBE34:
 185:src/exceptionHandler.cpp ****     }
 186:src/exceptionHandler.cpp **** }...
 135              		.loc 1 186 1
 136 0080 6F004005 		j	.L1
 137              	.LVL10:
 138              	.L32:
 139              	.LBB35:
  41:src/exceptionHandler.cpp ****         switch(a0){
 140              		.loc 1 41 9 is_stmt 1
 141 0084 13072004 		li	a4,66
 142              	.LVL11:
 143 0088 6362F718 		bgtu	a5,a4,.L30
 144 008c 93972700 		slli	a5,a5,2
 145              	.LVL12:
GAS LISTING /tmp/ccqmVd4y.s 			page 7


 146 0090 17070000 		lla	a4,.L5
 146      13070700 
 147 0098 B387E700 		add	a5,a5,a4
 148 009c 83A70700 		lw	a5,0(a5)
 149 00a0 B387E700 		add	a5,a5,a4
 150 00a4 67800700 		jr	a5
 151              		.section	.rodata
 152              		.align	2
 153              		.align	2
 154              	.L5:
 155 0000 00000000 		.word	.L30-.L5
 156 0004 00000000 		.word	.L17-.L5
 157 0008 00000000 		.word	.L16-.L5
 158 000c 00000000 		.word	.L30-.L5
 159 0010 00000000 		.word	.L30-.L5
 160 0014 00000000 		.word	.L30-.L5
 161 0018 00000000 		.word	.L30-.L5
 162 001c 00000000 		.word	.L30-.L5
 163 0020 00000000 		.word	.L30-.L5
 164 0024 00000000 		.word	.L30-.L5
 165 0028 00000000 		.word	.L30-.L5
 166 002c 00000000 		.word	.L30-.L5
 167 0030 00000000 		.word	.L30-.L5
 168 0034 00000000 		.word	.L30-.L5
 169 0038 00000000 		.word	.L30-.L5
 170 003c 00000000 		.word	.L30-.L5
 171 0040 00000000 		.word	.L30-.L5
 172 0044 00000000 		.word	.L15-.L5
 173 0048 00000000 		.word	.L14-.L5
 174 004c 00000000 		.word	.L13-.L5
 175 0050 00000000 		.word	.L12-.L5
 176 0054 00000000 		.word	.L30-.L5
 177 0058 00000000 		.word	.L30-.L5
 178 005c 00000000 		.word	.L30-.L5
 179 0060 00000000 		.word	.L30-.L5
 180 0064 00000000 		.word	.L30-.L5
 181 0068 00000000 		.word	.L30-.L5
 182 006c 00000000 		.word	.L30-.L5
 183 0070 00000000 		.word	.L30-.L5
 184 0074 00000000 		.word	.L30-.L5
 185 0078 00000000 		.word	.L30-.L5
 186 007c 00000000 		.word	.L30-.L5
 187 0080 00000000 		.word	.L30-.L5
 188 0084 00000000 		.word	.L11-.L5
 189 0088 00000000 		.word	.L10-.L5
 190 008c 00000000 		.word	.L9-.L5
 191 0090 00000000 		.word	.L8-.L5
 192 0094 00000000 		.word	.L30-.L5
 193 0098 00000000 		.word	.L30-.L5
 194 009c 00000000 		.word	.L30-.L5
 195 00a0 00000000 		.word	.L30-.L5
 196 00a4 00000000 		.word	.L30-.L5
 197 00a8 00000000 		.word	.L30-.L5
 198 00ac 00000000 		.word	.L30-.L5
 199 00b0 00000000 		.word	.L30-.L5
 200 00b4 00000000 		.word	.L30-.L5
 201 00b8 00000000 		.word	.L30-.L5
GAS LISTING /tmp/ccqmVd4y.s 			page 8


 202 00bc 00000000 		.word	.L30-.L5
 203 00c0 00000000 		.word	.L30-.L5
 204 00c4 00000000 		.word	.L7-.L5
 205 00c8 00000000 		.word	.L30-.L5
 206 00cc 00000000 		.word	.L30-.L5
 207 00d0 00000000 		.word	.L30-.L5
 208 00d4 00000000 		.word	.L30-.L5
 209 00d8 00000000 		.word	.L30-.L5
 210 00dc 00000000 		.word	.L30-.L5
 211 00e0 00000000 		.word	.L30-.L5
 212 00e4 00000000 		.word	.L30-.L5
 213 00e8 00000000 		.word	.L30-.L5
 214 00ec 00000000 		.word	.L30-.L5
 215 00f0 00000000 		.word	.L30-.L5
 216 00f4 00000000 		.word	.L30-.L5
 217 00f8 00000000 		.word	.L30-.L5
 218 00fc 00000000 		.word	.L30-.L5
 219 0100 00000000 		.word	.L30-.L5
 220 0104 00000000 		.word	.L6-.L5
 221 0108 00000000 		.word	.L4-.L5
 222              		.text
 223              	.L17:
  42:src/exceptionHandler.cpp ****             case 0x1: /// mem_alloc
 224              		.loc 1 42 13
  43:src/exceptionHandler.cpp ****                 returnVal = uint64(HeapManager::getInstance().heapAllocate(a1));
 225              		.loc 1 43 17
 226              	.LBB28:
 227              	.LBB29:
 228              		.file 2 "./h/heapManager.h"
   1:./h/heapManager.h **** /**
   2:./h/heapManager.h ****  * @file heapAllocator.h
   3:./h/heapManager.h ****  * @author stcksmsh (stcksmsh@gmail.com)
   4:./h/heapManager.h ****  * @brief class for heap management, used in MemoryManager
   5:./h/heapManager.h ****  * @version 0.1
   6:./h/heapManager.h ****  * @date 2023-12-16
   7:./h/heapManager.h ****  * 
   8:./h/heapManager.h ****  * @copyright Copyright (c) 2023
   9:./h/heapManager.h ****  * 
  10:./h/heapManager.h ****  */
  11:./h/heapManager.h **** #ifndef HEAPMANAGER_H
  12:./h/heapManager.h **** #define HEAPMANAGER_H
  13:./h/heapManager.h **** 
  14:./h/heapManager.h **** #include "types.h"
  15:./h/heapManager.h **** #include "attributes.h"
  16:./h/heapManager.h **** 
  17:./h/heapManager.h **** class HeapManager{
  18:./h/heapManager.h **** 
  19:./h/heapManager.h **** public:
  20:./h/heapManager.h ****     HeapManager();
  21:./h/heapManager.h **** 
  22:./h/heapManager.h ****     ~HeapManager();
  23:./h/heapManager.h **** 
  24:./h/heapManager.h ****     /// @brief initialize the heap
  25:./h/heapManager.h ****     /// @param nStart start address of the heap
  26:./h/heapManager.h ****     /// @param nEnd end address of the heap
  27:./h/heapManager.h ****     void init(uintptr_t nStart, size_t nEnd);
  28:./h/heapManager.h **** 
GAS LISTING /tmp/ccqmVd4y.s 			page 9


  29:./h/heapManager.h ****     /// @brief get the amount of free memory in the heap
  30:./h/heapManager.h ****     /// @return number of free blocks in the heap
  31:./h/heapManager.h ****     size_t getHeapFreeMemory();
  32:./h/heapManager.h **** 
  33:./h/heapManager.h ****     /// @brief allocates memory from the heap in blocks
  34:./h/heapManager.h ****     /// @param nSize number of blocks to allocate
  35:./h/heapManager.h ****     /// @return pointer to the allocated memory
  36:./h/heapManager.h ****     void* heapAllocate(size_t nSize);
  37:./h/heapManager.h **** 
  38:./h/heapManager.h ****     /// @brief frees memory from the heap
  39:./h/heapManager.h ****     /// @param pAddress address of the memory to free
  40:./h/heapManager.h ****     /// @return 0 if successful, -1 otherwise
  41:./h/heapManager.h ****     int heapFree(void* pAddress);
  42:./h/heapManager.h **** 
  43:./h/heapManager.h ****     /// @brief returns the singleton instance
  44:./h/heapManager.h ****     static HeapManager& getInstance(){
  45:./h/heapManager.h ****         return *instance;
 229              		.loc 2 45 9
 230              	.LBE29:
 231              	.LBE28:
  43:src/exceptionHandler.cpp ****                 returnVal = uint64(HeapManager::getInstance().heapAllocate(a1));
 232              		.loc 1 43 75 is_stmt 0
 233 00a8 93850900 		mv	a1,s3
 234 00ac 97070000 		la	a5,_ZN11HeapManager8instanceE
 234      83B70700 
 235 00b4 03B50700 		ld	a0,0(a5)
 236 00b8 97000000 		call	_ZN11HeapManager12heapAllocateEm@plt
 236      E7800000 
 237              	.LVL13:
  44:src/exceptionHandler.cpp ****                 break;
 238              		.loc 1 44 17 is_stmt 1
 239              	.L3:
  89:src/exceptionHandler.cpp ****         __asm__ volatile("mv a0, %0" : : "r"(returnVal));
 240              		.loc 1 89 9
  89:src/exceptionHandler.cpp ****         __asm__ volatile("mv a0, %0" : : "r"(returnVal));
 241              		.loc 1 89 57 is_stmt 0
 242              	#APP
 243              	# 89 "src/exceptionHandler.cpp" 1
  90:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc+4));
 244              		mv a0, a0
 245              	# 0 "" 2
 246              		.loc 1 90 9 is_stmt 1
  90:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc+4));
 247              		.loc 1 90 53 is_stmt 0
 248              	#NO_APP
 249 00c4 93844400 		addi	s1,s1,4
 250              	.LVL14:
  90:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc+4));
 251              		.loc 1 90 57
 252              	#APP
 253              	# 90 "src/exceptionHandler.cpp" 1
  91:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
 254              		csrw sepc, s1
 255              	# 0 "" 2
 256              		.loc 1 91 9 is_stmt 1
  91:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
 257              		.loc 1 91 61 is_stmt 0
GAS LISTING /tmp/ccqmVd4y.s 			page 10


 258              	# 91 "src/exceptionHandler.cpp" 1
  92:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
 259              		csrw sstatus, s2
 260              	# 0 "" 2
 261              		.loc 1 92 9 is_stmt 1
  92:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
 262              		.loc 1 92 42 is_stmt 0
 263              	# 92 "src/exceptionHandler.cpp" 1
 264              		csrc sip, 0x2
 265              	# 0 "" 2
 266              	.LVL15:
 267              	#NO_APP
 268              	.L1:
 269              	.LBE35:
 270              		.loc 1 186 1
 271 00d4 83308103 		ld	ra,56(sp)
 272              		.cfi_remember_state
 273              		.cfi_restore 1
 274 00d8 03340103 		ld	s0,48(sp)
 275              		.cfi_restore 8
 276              		.cfi_def_cfa 2, 64
 277 00dc 83348102 		ld	s1,40(sp)
 278              		.cfi_restore 9
 279 00e0 03390102 		ld	s2,32(sp)
 280              		.cfi_restore 18
 281 00e4 83398101 		ld	s3,24(sp)
 282              		.cfi_restore 19
 283              	.LVL16:
 284 00e8 033A0101 		ld	s4,16(sp)
 285              		.cfi_restore 20
 286              	.LVL17:
 287 00ec 833A8100 		ld	s5,8(sp)
 288              		.cfi_restore 21
 289              	.LVL18:
 290 00f0 033B0100 		ld	s6,0(sp)
 291              		.cfi_restore 22
 292              	.LVL19:
 293 00f4 13010104 		addi	sp,sp,64
 294              		.cfi_def_cfa_offset 0
 295 00f8 67800000 		jr	ra
 296              	.LVL20:
 297              	.L16:
 298              		.cfi_restore_state
 299              	.LBB36:
  45:src/exceptionHandler.cpp ****             case 0x2: /// mem_free
 300              		.loc 1 45 13 is_stmt 1
  46:src/exceptionHandler.cpp ****                 returnVal = HeapManager::getInstance().heapFree((void*)a1);
 301              		.loc 1 46 17
 302              	.LBB30:
 303              	.LBB31:
 304              		.loc 2 45 9
 305              	.LBE31:
 306              	.LBE30:
  46:src/exceptionHandler.cpp ****                 returnVal = HeapManager::getInstance().heapFree((void*)a1);
 307              		.loc 1 46 64 is_stmt 0
 308 00fc 93850900 		mv	a1,s3
 309 0100 97070000 		la	a5,_ZN11HeapManager8instanceE
GAS LISTING /tmp/ccqmVd4y.s 			page 11


 309      83B70700 
 310 0108 03B50700 		ld	a0,0(a5)
 311 010c 97000000 		call	_ZN11HeapManager8heapFreeEPv@plt
 311      E7800000 
 312              	.LVL21:
  47:src/exceptionHandler.cpp ****                 break;
 313              		.loc 1 47 17 is_stmt 1
 314 0114 6FF0DFFA 		j	.L3
 315              	.LVL22:
 316              	.L15:
  48:src/exceptionHandler.cpp ****             case 0x11: /// thread_create
 317              		.loc 1 48 13
  55:src/exceptionHandler.cpp ****                 __putc('\0');
 318              		.loc 1 55 17
  55:src/exceptionHandler.cpp ****                 __putc('\0');
 319              		.loc 1 55 23 is_stmt 0
 320 0118 13050000 		li	a0,0
 321 011c 97000000 		call	__putc@plt
 321      E7800000 
 322              	.LVL23:
  56:src/exceptionHandler.cpp ****                 returnVal = _thread::create((thread_t*)a1, (void(*)(void*))a2, (void*)a3, (void*)a4
 323              		.loc 1 56 17 is_stmt 1
  56:src/exceptionHandler.cpp ****                 returnVal = _thread::create((thread_t*)a1, (void(*)(void*))a2, (void*)a3, (void*)a4
 324              		.loc 1 56 44 is_stmt 0
 325 0124 13071000 		li	a4,1
 326 0128 93060B00 		mv	a3,s6
 327 012c 13860A00 		mv	a2,s5
 328 0130 93050A00 		mv	a1,s4
 329 0134 13850900 		mv	a0,s3
 330 0138 97000000 		call	_ZN7_thread6createEPPS_PFvPvES2_S2_b@plt
 330      E7800000 
 331              	.LVL24:
  57:src/exceptionHandler.cpp ****                 break;
 332              		.loc 1 57 17 is_stmt 1
 333 0140 6FF01FF8 		j	.L3
 334              	.LVL25:
 335              	.L14:
  58:src/exceptionHandler.cpp ****             case 0x12: /// thread_exit
 336              		.loc 1 58 13
  59:src/exceptionHandler.cpp ****                 returnVal = _thread::currentThread->exit();
 337              		.loc 1 59 17
  59:src/exceptionHandler.cpp ****                 returnVal = _thread::currentThread->exit();
 338              		.loc 1 59 57 is_stmt 0
 339 0144 97000000 		call	_ZN7_thread4exitEv@plt
 339      E7800000 
 340              	.LVL26:
  60:src/exceptionHandler.cpp ****                 break;
 341              		.loc 1 60 17 is_stmt 1
 342 014c 6FF05FF7 		j	.L3
 343              	.LVL27:
 344              	.L13:
  61:src/exceptionHandler.cpp ****             case 0x13: /// thread_dispatch
 345              		.loc 1 61 13
  62:src/exceptionHandler.cpp ****                 _thread::dispatch();
 346              		.loc 1 62 17
  62:src/exceptionHandler.cpp ****                 _thread::dispatch();
 347              		.loc 1 62 34 is_stmt 0
GAS LISTING /tmp/ccqmVd4y.s 			page 12


 348 0150 97000000 		call	_ZN7_thread8dispatchEv@plt
 348      E7800000 
 349              	.LVL28:
  63:src/exceptionHandler.cpp ****                 break;
 350              		.loc 1 63 17 is_stmt 1
 351              	.LBE36:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 352              		.loc 1 39 12 is_stmt 0
 353 0158 13050000 		li	a0,0
 354              	.LBB37:
  63:src/exceptionHandler.cpp ****                 break;
 355              		.loc 1 63 17
 356 015c 6FF05FF6 		j	.L3
 357              	.LVL29:
 358              	.L12:
  64:src/exceptionHandler.cpp ****             case 0x14: /// thread_join
 359              		.loc 1 64 13 is_stmt 1
  65:src/exceptionHandler.cpp ****                 _thread::currentThread->join((thread_t)a1);
 360              		.loc 1 65 17
  65:src/exceptionHandler.cpp ****                 _thread::currentThread->join((thread_t)a1);
 361              		.loc 1 65 45 is_stmt 0
 362 0160 93850900 		mv	a1,s3
 363 0164 97070000 		la	a5,_ZN7_thread13currentThreadE
 363      83B70700 
 364 016c 03B50700 		ld	a0,0(a5)
 365 0170 97000000 		call	_ZN7_thread4joinEPS_@plt
 365      E7800000 
 366              	.LVL30:
  66:src/exceptionHandler.cpp ****                 break;
 367              		.loc 1 66 17 is_stmt 1
 368              	.LBE37:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 369              		.loc 1 39 12 is_stmt 0
 370 0178 13050000 		li	a0,0
 371              	.LBB38:
  66:src/exceptionHandler.cpp ****                 break;
 372              		.loc 1 66 17
 373 017c 6FF05FF4 		j	.L3
 374              	.LVL31:
 375              	.L11:
  67:src/exceptionHandler.cpp ****             case 0x21: /// sem_open
 376              		.loc 1 67 13 is_stmt 1
  68:src/exceptionHandler.cpp ****                 _sem::open((sem_t*)a1, unsigned(a2));
 377              		.loc 1 68 17
  68:src/exceptionHandler.cpp ****                 _sem::open((sem_t*)a1, unsigned(a2));
 378              		.loc 1 68 27 is_stmt 0
 379 0180 9B050A00 		sext.w	a1,s4
 380 0184 13850900 		mv	a0,s3
 381 0188 97000000 		call	_ZN4_sem4openEPPS_j@plt
 381      E7800000 
 382              	.LVL32:
  69:src/exceptionHandler.cpp ****                 break;
 383              		.loc 1 69 17 is_stmt 1
 384              	.LBE38:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 385              		.loc 1 39 12 is_stmt 0
 386 0190 13050000 		li	a0,0
GAS LISTING /tmp/ccqmVd4y.s 			page 13


 387              	.LBB39:
  69:src/exceptionHandler.cpp ****                 break;
 388              		.loc 1 69 17
 389 0194 6FF0DFF2 		j	.L3
 390              	.LVL33:
 391              	.L10:
  70:src/exceptionHandler.cpp ****             case 0x22: /// sem_close
 392              		.loc 1 70 13 is_stmt 1
  71:src/exceptionHandler.cpp ****                 _sem::close((sem_t)a1);
 393              		.loc 1 71 17
  71:src/exceptionHandler.cpp ****                 _sem::close((sem_t)a1);
 394              		.loc 1 71 28 is_stmt 0
 395 0198 13850900 		mv	a0,s3
 396 019c 97000000 		call	_ZN4_sem5closeEPS_@plt
 396      E7800000 
 397              	.LVL34:
  72:src/exceptionHandler.cpp ****                 break;
 398              		.loc 1 72 17 is_stmt 1
 399              	.LBE39:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 400              		.loc 1 39 12 is_stmt 0
 401 01a4 13050000 		li	a0,0
 402              	.LBB40:
  72:src/exceptionHandler.cpp ****                 break;
 403              		.loc 1 72 17
 404 01a8 6FF09FF1 		j	.L3
 405              	.LVL35:
 406              	.L9:
  73:src/exceptionHandler.cpp ****             case 0x23: /// sem_wait
 407              		.loc 1 73 13 is_stmt 1
  74:src/exceptionHandler.cpp ****                 _sem::wait((sem_t)a1);
 408              		.loc 1 74 17
  74:src/exceptionHandler.cpp ****                 _sem::wait((sem_t)a1);
 409              		.loc 1 74 27 is_stmt 0
 410 01ac 13850900 		mv	a0,s3
 411 01b0 97000000 		call	_ZN4_sem4waitEPS_@plt
 411      E7800000 
 412              	.LVL36:
  75:src/exceptionHandler.cpp ****                 break;
 413              		.loc 1 75 17 is_stmt 1
 414              	.LBE40:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 415              		.loc 1 39 12 is_stmt 0
 416 01b8 13050000 		li	a0,0
 417              	.LBB41:
  75:src/exceptionHandler.cpp ****                 break;
 418              		.loc 1 75 17
 419 01bc 6FF05FF0 		j	.L3
 420              	.LVL37:
 421              	.L8:
  76:src/exceptionHandler.cpp ****             case 0x24: /// sem_signal
 422              		.loc 1 76 13 is_stmt 1
  77:src/exceptionHandler.cpp ****                 _sem::signal((sem_t)a1);
 423              		.loc 1 77 17
  77:src/exceptionHandler.cpp ****                 _sem::signal((sem_t)a1);
 424              		.loc 1 77 29 is_stmt 0
 425 01c0 13850900 		mv	a0,s3
GAS LISTING /tmp/ccqmVd4y.s 			page 14


 426 01c4 97000000 		call	_ZN4_sem6signalEPS_@plt
 426      E7800000 
 427              	.LVL38:
  78:src/exceptionHandler.cpp ****                 break;
 428              		.loc 1 78 17 is_stmt 1
 429              	.LBE41:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 430              		.loc 1 39 12 is_stmt 0
 431 01cc 13050000 		li	a0,0
 432              	.LBB42:
  78:src/exceptionHandler.cpp ****                 break;
 433              		.loc 1 78 17
 434 01d0 6FF01FEF 		j	.L3
 435              	.LVL39:
 436              	.L7:
  79:src/exceptionHandler.cpp ****             case 0x31: /// time_sleep
 437              		.loc 1 79 13 is_stmt 1
  80:src/exceptionHandler.cpp ****                 returnVal = Timer::getInstance().sleep(a1);
 438              		.loc 1 80 17
  80:src/exceptionHandler.cpp ****                 returnVal = Timer::getInstance().sleep(a1);
 439              		.loc 1 80 48 is_stmt 0
 440 01d4 97000000 		call	_ZN5Timer11getInstanceEv@plt
 440      E7800000 
 441              	.LVL40:
  80:src/exceptionHandler.cpp ****                 returnVal = Timer::getInstance().sleep(a1);
 442              		.loc 1 80 55
 443 01dc 93850900 		mv	a1,s3
 444 01e0 97000000 		call	_ZN5Timer5sleepEm@plt
 444      E7800000 
 445              	.LVL41:
  81:src/exceptionHandler.cpp ****                 break;
 446              		.loc 1 81 17 is_stmt 1
 447 01e8 6FF09FED 		j	.L3
 448              	.LVL42:
 449              	.L6:
  82:src/exceptionHandler.cpp ****             case 0x41:
 450              		.loc 1 82 13
  83:src/exceptionHandler.cpp ****                 returnVal = __getc();
 451              		.loc 1 83 17
  83:src/exceptionHandler.cpp ****                 returnVal = __getc();
 452              		.loc 1 83 35 is_stmt 0
 453 01ec 97000000 		call	__getc@plt
 453      E7800000 
 454              	.LVL43:
  84:src/exceptionHandler.cpp ****                 break;
 455              		.loc 1 84 17 is_stmt 1
 456 01f4 6FF0DFEC 		j	.L3
 457              	.LVL44:
 458              	.L4:
  85:src/exceptionHandler.cpp ****             case 0x42:
 459              		.loc 1 85 13
  86:src/exceptionHandler.cpp ****                 __putc(a1);
 460              		.loc 1 86 17
  86:src/exceptionHandler.cpp ****                 __putc(a1);
 461              		.loc 1 86 23 is_stmt 0
 462 01f8 13F5F90F 		andi	a0,s3,0xff
 463 01fc 97000000 		call	__putc@plt
GAS LISTING /tmp/ccqmVd4y.s 			page 15


 463      E7800000 
 464              	.LVL45:
  87:src/exceptionHandler.cpp ****                 break;
 465              		.loc 1 87 17 is_stmt 1
 466              	.LBE42:
  39:src/exceptionHandler.cpp ****     uint64 returnVal = 0;
 467              		.loc 1 39 12 is_stmt 0
 468 0204 13050000 		li	a0,0
 469              	.LBB43:
  87:src/exceptionHandler.cpp ****                 break;
 470              		.loc 1 87 17
 471 0208 6FF09FEB 		j	.L3
 472              	.LVL46:
 473              	.L30:
  40:src/exceptionHandler.cpp ****     if(scause == 0x0000000000000009UL || scause == 0x0000000000000008UL){   /// check if the except
 474              		.loc 1 40 5
 475 020c 13050000 		li	a0,0
 476 0210 6FF01FEB 		j	.L3
 477              	.LVL47:
 478              	.L33:
 479              	.LBB32:
 480              	.LBB22:
  95:src/exceptionHandler.cpp ****         __putc('\n');
 481              		.loc 1 95 9 is_stmt 1
  95:src/exceptionHandler.cpp ****         __putc('\n');
 482              		.loc 1 95 15 is_stmt 0
 483 0214 1305A000 		li	a0,10
 484 0218 97000000 		call	__putc@plt
 484      E7800000 
 485              	.LVL48:
  96:src/exceptionHandler.cpp ****         __putc('E');
 486              		.loc 1 96 9 is_stmt 1
  96:src/exceptionHandler.cpp ****         __putc('E');
 487              		.loc 1 96 15 is_stmt 0
 488 0220 13055004 		li	a0,69
 489 0224 97000000 		call	__putc@plt
 489      E7800000 
 490              	.LVL49:
  97:src/exceptionHandler.cpp ****         __putc('r');
 491              		.loc 1 97 9 is_stmt 1
  97:src/exceptionHandler.cpp ****         __putc('r');
 492              		.loc 1 97 15 is_stmt 0
 493 022c 13052007 		li	a0,114
 494 0230 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL50:
  98:src/exceptionHandler.cpp ****         __putc('r');
 496              		.loc 1 98 9 is_stmt 1
  98:src/exceptionHandler.cpp ****         __putc('r');
 497              		.loc 1 98 15 is_stmt 0
 498 0238 13052007 		li	a0,114
 499 023c 97000000 		call	__putc@plt
 499      E7800000 
 500              	.LVL51:
  99:src/exceptionHandler.cpp ****         __putc('o');
 501              		.loc 1 99 9 is_stmt 1
  99:src/exceptionHandler.cpp ****         __putc('o');
GAS LISTING /tmp/ccqmVd4y.s 			page 16


 502              		.loc 1 99 15 is_stmt 0
 503 0244 1305F006 		li	a0,111
 504 0248 97000000 		call	__putc@plt
 504      E7800000 
 505              	.LVL52:
 100:src/exceptionHandler.cpp ****         __putc('r');
 506              		.loc 1 100 9 is_stmt 1
 100:src/exceptionHandler.cpp ****         __putc('r');
 507              		.loc 1 100 15 is_stmt 0
 508 0250 13052007 		li	a0,114
 509 0254 97000000 		call	__putc@plt
 509      E7800000 
 510              	.LVL53:
 101:src/exceptionHandler.cpp ****         __putc(':');
 511              		.loc 1 101 9 is_stmt 1
 101:src/exceptionHandler.cpp ****         __putc(':');
 512              		.loc 1 101 15 is_stmt 0
 513 025c 1305A003 		li	a0,58
 514 0260 97000000 		call	__putc@plt
 514      E7800000 
 515              	.LVL54:
 102:src/exceptionHandler.cpp ****         __putc(' ');
 516              		.loc 1 102 9 is_stmt 1
 102:src/exceptionHandler.cpp ****         __putc(' ');
 517              		.loc 1 102 15 is_stmt 0
 518 0268 13050002 		li	a0,32
 519 026c 97000000 		call	__putc@plt
 519      E7800000 
 520              	.LVL55:
 103:src/exceptionHandler.cpp ****         __putc('i');
 521              		.loc 1 103 9 is_stmt 1
 103:src/exceptionHandler.cpp ****         __putc('i');
 522              		.loc 1 103 15 is_stmt 0
 523 0274 13059006 		li	a0,105
 524 0278 97000000 		call	__putc@plt
 524      E7800000 
 525              	.LVL56:
 104:src/exceptionHandler.cpp ****         __putc('l');
 526              		.loc 1 104 9 is_stmt 1
 104:src/exceptionHandler.cpp ****         __putc('l');
 527              		.loc 1 104 15 is_stmt 0
 528 0280 1305C006 		li	a0,108
 529 0284 97000000 		call	__putc@plt
 529      E7800000 
 530              	.LVL57:
 105:src/exceptionHandler.cpp ****         __putc('l');
 531              		.loc 1 105 9 is_stmt 1
 105:src/exceptionHandler.cpp ****         __putc('l');
 532              		.loc 1 105 15 is_stmt 0
 533 028c 1305C006 		li	a0,108
 534 0290 97000000 		call	__putc@plt
 534      E7800000 
 535              	.LVL58:
 106:src/exceptionHandler.cpp ****         __putc('e');
 536              		.loc 1 106 9 is_stmt 1
 106:src/exceptionHandler.cpp ****         __putc('e');
 537              		.loc 1 106 15 is_stmt 0
GAS LISTING /tmp/ccqmVd4y.s 			page 17


 538 0298 13055006 		li	a0,101
 539 029c 97000000 		call	__putc@plt
 539      E7800000 
 540              	.LVL59:
 107:src/exceptionHandler.cpp ****         __putc('g');
 541              		.loc 1 107 9 is_stmt 1
 107:src/exceptionHandler.cpp ****         __putc('g');
 542              		.loc 1 107 15 is_stmt 0
 543 02a4 13057006 		li	a0,103
 544 02a8 97000000 		call	__putc@plt
 544      E7800000 
 545              	.LVL60:
 108:src/exceptionHandler.cpp ****         __putc('a');
 546              		.loc 1 108 9 is_stmt 1
 108:src/exceptionHandler.cpp ****         __putc('a');
 547              		.loc 1 108 15 is_stmt 0
 548 02b0 13051006 		li	a0,97
 549 02b4 97000000 		call	__putc@plt
 549      E7800000 
 550              	.LVL61:
 109:src/exceptionHandler.cpp ****         __putc('l');
 551              		.loc 1 109 9 is_stmt 1
 109:src/exceptionHandler.cpp ****         __putc('l');
 552              		.loc 1 109 15 is_stmt 0
 553 02bc 1305C006 		li	a0,108
 554 02c0 97000000 		call	__putc@plt
 554      E7800000 
 555              	.LVL62:
 110:src/exceptionHandler.cpp ****         __putc(' ');
 556              		.loc 1 110 9 is_stmt 1
 110:src/exceptionHandler.cpp ****         __putc(' ');
 557              		.loc 1 110 15 is_stmt 0
 558 02c8 13050002 		li	a0,32
 559 02cc 97000000 		call	__putc@plt
 559      E7800000 
 560              	.LVL63:
 111:src/exceptionHandler.cpp ****         __putc('r');
 561              		.loc 1 111 9 is_stmt 1
 111:src/exceptionHandler.cpp ****         __putc('r');
 562              		.loc 1 111 15 is_stmt 0
 563 02d4 13052007 		li	a0,114
 564 02d8 97000000 		call	__putc@plt
 564      E7800000 
 565              	.LVL64:
 112:src/exceptionHandler.cpp ****         __putc('e');
 566              		.loc 1 112 9 is_stmt 1
 112:src/exceptionHandler.cpp ****         __putc('e');
 567              		.loc 1 112 15 is_stmt 0
 568 02e0 13055006 		li	a0,101
 569 02e4 97000000 		call	__putc@plt
 569      E7800000 
 570              	.LVL65:
 113:src/exceptionHandler.cpp ****         __putc('a');
 571              		.loc 1 113 9 is_stmt 1
 113:src/exceptionHandler.cpp ****         __putc('a');
 572              		.loc 1 113 15 is_stmt 0
 573 02ec 13051006 		li	a0,97
GAS LISTING /tmp/ccqmVd4y.s 			page 18


 574 02f0 97000000 		call	__putc@plt
 574      E7800000 
 575              	.LVL66:
 114:src/exceptionHandler.cpp ****         __putc('d');
 576              		.loc 1 114 9 is_stmt 1
 114:src/exceptionHandler.cpp ****         __putc('d');
 577              		.loc 1 114 15 is_stmt 0
 578 02f8 13054006 		li	a0,100
 579 02fc 97000000 		call	__putc@plt
 579      E7800000 
 580              	.LVL67:
 115:src/exceptionHandler.cpp ****         __putc('!');
 581              		.loc 1 115 9 is_stmt 1
 115:src/exceptionHandler.cpp ****         __putc('!');
 582              		.loc 1 115 15 is_stmt 0
 583 0304 13051002 		li	a0,33
 584 0308 97000000 		call	__putc@plt
 584      E7800000 
 585              	.LVL68:
 116:src/exceptionHandler.cpp ****         uint64 pc;
 586              		.loc 1 116 9 is_stmt 1
 117:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 587              		.loc 1 117 9
 117:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 588              		.loc 1 117 53 is_stmt 0
 589              	#APP
 590              	# 117 "src/exceptionHandler.cpp" 1
 591              		csrr s2, sepc
 592              	# 0 "" 2
 593              	.LVL69:
 118:src/exceptionHandler.cpp ****         __putc('\n');
 594              		.loc 1 118 9 is_stmt 1
 118:src/exceptionHandler.cpp ****         __putc('\n');
 595              		.loc 1 118 15 is_stmt 0
 596              	#NO_APP
 597 0314 1305A000 		li	a0,10
 598 0318 97000000 		call	__putc@plt
 598      E7800000 
 599              	.LVL70:
 119:src/exceptionHandler.cpp ****         __putc('P');
 600              		.loc 1 119 9 is_stmt 1
 119:src/exceptionHandler.cpp ****         __putc('P');
 601              		.loc 1 119 15 is_stmt 0
 602 0320 13050005 		li	a0,80
 603 0324 97000000 		call	__putc@plt
 603      E7800000 
 604              	.LVL71:
 120:src/exceptionHandler.cpp ****         __putc('C');
 605              		.loc 1 120 9 is_stmt 1
 120:src/exceptionHandler.cpp ****         __putc('C');
 606              		.loc 1 120 15 is_stmt 0
 607 032c 13053004 		li	a0,67
 608 0330 97000000 		call	__putc@plt
 608      E7800000 
 609              	.LVL72:
 121:src/exceptionHandler.cpp ****         __putc(':');
 610              		.loc 1 121 9 is_stmt 1
GAS LISTING /tmp/ccqmVd4y.s 			page 19


 121:src/exceptionHandler.cpp ****         __putc(':');
 611              		.loc 1 121 15 is_stmt 0
 612 0338 1305A003 		li	a0,58
 613 033c 97000000 		call	__putc@plt
 613      E7800000 
 614              	.LVL73:
 122:src/exceptionHandler.cpp ****         __putc(' ');
 615              		.loc 1 122 9 is_stmt 1
 122:src/exceptionHandler.cpp ****         __putc(' ');
 616              		.loc 1 122 15 is_stmt 0
 617 0344 13050002 		li	a0,32
 618 0348 97000000 		call	__putc@plt
 618      E7800000 
 619              	.LVL74:
 123:src/exceptionHandler.cpp ****         __putc('0');
 620              		.loc 1 123 9 is_stmt 1
 123:src/exceptionHandler.cpp ****         __putc('0');
 621              		.loc 1 123 15 is_stmt 0
 622 0350 13050003 		li	a0,48
 623 0354 97000000 		call	__putc@plt
 623      E7800000 
 624              	.LVL75:
 124:src/exceptionHandler.cpp ****         __putc('x');
 625              		.loc 1 124 9 is_stmt 1
 124:src/exceptionHandler.cpp ****         __putc('x');
 626              		.loc 1 124 15 is_stmt 0
 627 035c 13058007 		li	a0,120
 628 0360 97000000 		call	__putc@plt
 628      E7800000 
 629              	.LVL76:
 125:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 630              		.loc 1 125 9 is_stmt 1
 631              	.LBB23:
 125:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 632              		.loc 1 125 17 is_stmt 0
 633 0368 9304F000 		li	s1,15
 634              	.LVL77:
 635 036c 6F004001 		j	.L23
 636              	.LVL78:
 637              	.L21:
 638              	.LBB24:
 130:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 639              		.loc 1 130 17 is_stmt 1
 130:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 640              		.loc 1 130 23 is_stmt 0
 641 0370 13057503 		addi	a0,a0,55
 642              	.LVL79:
 643 0374 97000000 		call	__putc@plt
 643      E7800000 
 644              	.LVL80:
 645              	.L22:
 646              	.LBE24:
 125:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 647              		.loc 1 125 9 is_stmt 1 discriminator 2
 648 037c 9B84F4FF 		addiw	s1,s1,-1
 649              	.LVL81:
 650              	.L23:
GAS LISTING /tmp/ccqmVd4y.s 			page 20


 125:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 651              		.loc 1 125 27 discriminator 1
 652 0380 63C40402 		bltz	s1,.L20
 653              	.LBB25:
 126:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 654              		.loc 1 126 13
 126:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 655              		.loc 1 126 36 is_stmt 0
 656 0384 1B952400 		slliw	a0,s1,2
 126:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 657              		.loc 1 126 30
 658 0388 3355A900 		srl	a0,s2,a0
 126:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 659              		.loc 1 126 20
 660 038c 1375F500 		andi	a0,a0,15
 661              	.LVL82:
 127:src/exceptionHandler.cpp ****             if(tmp < 10){
 662              		.loc 1 127 13 is_stmt 1
 663 0390 93079000 		li	a5,9
 664 0394 E3EEA7FC 		bgtu	a0,a5,.L21
 128:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 665              		.loc 1 128 17
 128:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 666              		.loc 1 128 23 is_stmt 0
 667 0398 13050503 		addi	a0,a0,48
 668              	.LVL83:
 669 039c 97000000 		call	__putc@plt
 669      E7800000 
 670              	.LVL84:
 671 03a4 6FF09FFD 		j	.L22
 672              	.LVL85:
 673              	.L20:
 674              	.LBE25:
 675              	.LBE23:
 133:src/exceptionHandler.cpp ****         assert(false);
 676              		.loc 1 133 9 is_stmt 1
 133:src/exceptionHandler.cpp ****         assert(false);
 677              		.loc 1 133 9
 678 03a8 97060000 		lla	a3,.LC0
 678      93860600 
 679 03b0 13065008 		li	a2,133
 680 03b4 97050000 		lla	a1,.LC1
 680      93850500 
 681 03bc 17050000 		lla	a0,.LC2
 681      13050500 
 682 03c4 97000000 		call	_Z13assert_failedPKcS0_jS0_@plt
 682      E7800000 
 683              	.LVL86:
 133:src/exceptionHandler.cpp ****         assert(false);
 684              		.loc 1 133 22
 685              	.LBE22:
 686 03cc 6FF09FD0 		j	.L1
 687              	.LVL87:
 688              	.L34:
 689              	.LBB26:
 690              	.LBB18:
 136:src/exceptionHandler.cpp ****         __putc('\n');
GAS LISTING /tmp/ccqmVd4y.s 			page 21


 691              		.loc 1 136 9
 136:src/exceptionHandler.cpp ****         __putc('\n');
 692              		.loc 1 136 15 is_stmt 0
 693 03d0 1305A000 		li	a0,10
 694 03d4 97000000 		call	__putc@plt
 694      E7800000 
 695              	.LVL88:
 137:src/exceptionHandler.cpp ****         __putc('E');
 696              		.loc 1 137 9 is_stmt 1
 137:src/exceptionHandler.cpp ****         __putc('E');
 697              		.loc 1 137 15 is_stmt 0
 698 03dc 13055004 		li	a0,69
 699 03e0 97000000 		call	__putc@plt
 699      E7800000 
 700              	.LVL89:
 138:src/exceptionHandler.cpp ****         __putc('r');
 701              		.loc 1 138 9 is_stmt 1
 138:src/exceptionHandler.cpp ****         __putc('r');
 702              		.loc 1 138 15 is_stmt 0
 703 03e8 13052007 		li	a0,114
 704 03ec 97000000 		call	__putc@plt
 704      E7800000 
 705              	.LVL90:
 139:src/exceptionHandler.cpp ****         __putc('r');
 706              		.loc 1 139 9 is_stmt 1
 139:src/exceptionHandler.cpp ****         __putc('r');
 707              		.loc 1 139 15 is_stmt 0
 708 03f4 13052007 		li	a0,114
 709 03f8 97000000 		call	__putc@plt
 709      E7800000 
 710              	.LVL91:
 140:src/exceptionHandler.cpp ****         __putc('o');
 711              		.loc 1 140 9 is_stmt 1
 140:src/exceptionHandler.cpp ****         __putc('o');
 712              		.loc 1 140 15 is_stmt 0
 713 0400 1305F006 		li	a0,111
 714 0404 97000000 		call	__putc@plt
 714      E7800000 
 715              	.LVL92:
 141:src/exceptionHandler.cpp ****         __putc('r');
 716              		.loc 1 141 9 is_stmt 1
 141:src/exceptionHandler.cpp ****         __putc('r');
 717              		.loc 1 141 15 is_stmt 0
 718 040c 13052007 		li	a0,114
 719 0410 97000000 		call	__putc@plt
 719      E7800000 
 720              	.LVL93:
 142:src/exceptionHandler.cpp ****         __putc(':');
 721              		.loc 1 142 9 is_stmt 1
 142:src/exceptionHandler.cpp ****         __putc(':');
 722              		.loc 1 142 15 is_stmt 0
 723 0418 1305A003 		li	a0,58
 724 041c 97000000 		call	__putc@plt
 724      E7800000 
 725              	.LVL94:
 143:src/exceptionHandler.cpp ****         __putc(' ');
 726              		.loc 1 143 9 is_stmt 1
GAS LISTING /tmp/ccqmVd4y.s 			page 22


 143:src/exceptionHandler.cpp ****         __putc(' ');
 727              		.loc 1 143 15 is_stmt 0
 728 0424 13050002 		li	a0,32
 729 0428 97000000 		call	__putc@plt
 729      E7800000 
 730              	.LVL95:
 144:src/exceptionHandler.cpp ****         __putc('i');
 731              		.loc 1 144 9 is_stmt 1
 144:src/exceptionHandler.cpp ****         __putc('i');
 732              		.loc 1 144 15 is_stmt 0
 733 0430 13059006 		li	a0,105
 734 0434 97000000 		call	__putc@plt
 734      E7800000 
 735              	.LVL96:
 145:src/exceptionHandler.cpp ****         __putc('l');
 736              		.loc 1 145 9 is_stmt 1
 145:src/exceptionHandler.cpp ****         __putc('l');
 737              		.loc 1 145 15 is_stmt 0
 738 043c 1305C006 		li	a0,108
 739 0440 97000000 		call	__putc@plt
 739      E7800000 
 740              	.LVL97:
 146:src/exceptionHandler.cpp ****         __putc('l');
 741              		.loc 1 146 9 is_stmt 1
 146:src/exceptionHandler.cpp ****         __putc('l');
 742              		.loc 1 146 15 is_stmt 0
 743 0448 1305C006 		li	a0,108
 744 044c 97000000 		call	__putc@plt
 744      E7800000 
 745              	.LVL98:
 147:src/exceptionHandler.cpp ****         __putc('e');
 746              		.loc 1 147 9 is_stmt 1
 147:src/exceptionHandler.cpp ****         __putc('e');
 747              		.loc 1 147 15 is_stmt 0
 748 0454 13055006 		li	a0,101
 749 0458 97000000 		call	__putc@plt
 749      E7800000 
 750              	.LVL99:
 148:src/exceptionHandler.cpp ****         __putc('g');
 751              		.loc 1 148 9 is_stmt 1
 148:src/exceptionHandler.cpp ****         __putc('g');
 752              		.loc 1 148 15 is_stmt 0
 753 0460 13057006 		li	a0,103
 754 0464 97000000 		call	__putc@plt
 754      E7800000 
 755              	.LVL100:
 149:src/exceptionHandler.cpp ****         __putc('a');
 756              		.loc 1 149 9 is_stmt 1
 149:src/exceptionHandler.cpp ****         __putc('a');
 757              		.loc 1 149 15 is_stmt 0
 758 046c 13051006 		li	a0,97
 759 0470 97000000 		call	__putc@plt
 759      E7800000 
 760              	.LVL101:
 150:src/exceptionHandler.cpp ****         __putc('l');
 761              		.loc 1 150 9 is_stmt 1
 150:src/exceptionHandler.cpp ****         __putc('l');
GAS LISTING /tmp/ccqmVd4y.s 			page 23


 762              		.loc 1 150 15 is_stmt 0
 763 0478 1305C006 		li	a0,108
 764 047c 97000000 		call	__putc@plt
 764      E7800000 
 765              	.LVL102:
 151:src/exceptionHandler.cpp ****         __putc(' ');
 766              		.loc 1 151 9 is_stmt 1
 151:src/exceptionHandler.cpp ****         __putc(' ');
 767              		.loc 1 151 15 is_stmt 0
 768 0484 13050002 		li	a0,32
 769 0488 97000000 		call	__putc@plt
 769      E7800000 
 770              	.LVL103:
 152:src/exceptionHandler.cpp ****         __putc('w');
 771              		.loc 1 152 9 is_stmt 1
 152:src/exceptionHandler.cpp ****         __putc('w');
 772              		.loc 1 152 15 is_stmt 0
 773 0490 13057007 		li	a0,119
 774 0494 97000000 		call	__putc@plt
 774      E7800000 
 775              	.LVL104:
 153:src/exceptionHandler.cpp ****         __putc('r');
 776              		.loc 1 153 9 is_stmt 1
 153:src/exceptionHandler.cpp ****         __putc('r');
 777              		.loc 1 153 15 is_stmt 0
 778 049c 13052007 		li	a0,114
 779 04a0 97000000 		call	__putc@plt
 779      E7800000 
 780              	.LVL105:
 154:src/exceptionHandler.cpp ****         __putc('i');
 781              		.loc 1 154 9 is_stmt 1
 154:src/exceptionHandler.cpp ****         __putc('i');
 782              		.loc 1 154 15 is_stmt 0
 783 04a8 13059006 		li	a0,105
 784 04ac 97000000 		call	__putc@plt
 784      E7800000 
 785              	.LVL106:
 155:src/exceptionHandler.cpp ****         __putc('t');
 786              		.loc 1 155 9 is_stmt 1
 155:src/exceptionHandler.cpp ****         __putc('t');
 787              		.loc 1 155 15 is_stmt 0
 788 04b4 13054007 		li	a0,116
 789 04b8 97000000 		call	__putc@plt
 789      E7800000 
 790              	.LVL107:
 156:src/exceptionHandler.cpp ****         __putc('e');
 791              		.loc 1 156 9 is_stmt 1
 156:src/exceptionHandler.cpp ****         __putc('e');
 792              		.loc 1 156 15 is_stmt 0
 793 04c0 13055006 		li	a0,101
 794 04c4 97000000 		call	__putc@plt
 794      E7800000 
 795              	.LVL108:
 157:src/exceptionHandler.cpp ****         __putc('!');
 796              		.loc 1 157 9 is_stmt 1
 157:src/exceptionHandler.cpp ****         __putc('!');
 797              		.loc 1 157 15 is_stmt 0
GAS LISTING /tmp/ccqmVd4y.s 			page 24


 798 04cc 13051002 		li	a0,33
 799 04d0 97000000 		call	__putc@plt
 799      E7800000 
 800              	.LVL109:
 158:src/exceptionHandler.cpp ****         uint64 pc;
 801              		.loc 1 158 9 is_stmt 1
 159:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 802              		.loc 1 159 9
 159:src/exceptionHandler.cpp ****         __asm__ volatile("csrr %0, sepc" : "=r"(pc));
 803              		.loc 1 159 53 is_stmt 0
 804              	#APP
 805              	# 159 "src/exceptionHandler.cpp" 1
 806              		csrr s2, sepc
 807              	# 0 "" 2
 808              	.LVL110:
 160:src/exceptionHandler.cpp ****         __putc('\n');
 809              		.loc 1 160 9 is_stmt 1
 160:src/exceptionHandler.cpp ****         __putc('\n');
 810              		.loc 1 160 15 is_stmt 0
 811              	#NO_APP
 812 04dc 1305A000 		li	a0,10
 813 04e0 97000000 		call	__putc@plt
 813      E7800000 
 814              	.LVL111:
 161:src/exceptionHandler.cpp ****         __putc('P');
 815              		.loc 1 161 9 is_stmt 1
 161:src/exceptionHandler.cpp ****         __putc('P');
 816              		.loc 1 161 15 is_stmt 0
 817 04e8 13050005 		li	a0,80
 818 04ec 97000000 		call	__putc@plt
 818      E7800000 
 819              	.LVL112:
 162:src/exceptionHandler.cpp ****         __putc('C');
 820              		.loc 1 162 9 is_stmt 1
 162:src/exceptionHandler.cpp ****         __putc('C');
 821              		.loc 1 162 15 is_stmt 0
 822 04f4 13053004 		li	a0,67
 823 04f8 97000000 		call	__putc@plt
 823      E7800000 
 824              	.LVL113:
 163:src/exceptionHandler.cpp ****         __putc(':');
 825              		.loc 1 163 9 is_stmt 1
 163:src/exceptionHandler.cpp ****         __putc(':');
 826              		.loc 1 163 15 is_stmt 0
 827 0500 1305A003 		li	a0,58
 828 0504 97000000 		call	__putc@plt
 828      E7800000 
 829              	.LVL114:
 164:src/exceptionHandler.cpp ****         __putc(' ');
 830              		.loc 1 164 9 is_stmt 1
 164:src/exceptionHandler.cpp ****         __putc(' ');
 831              		.loc 1 164 15 is_stmt 0
 832 050c 13050002 		li	a0,32
 833 0510 97000000 		call	__putc@plt
 833      E7800000 
 834              	.LVL115:
 165:src/exceptionHandler.cpp ****         __putc('0');
GAS LISTING /tmp/ccqmVd4y.s 			page 25


 835              		.loc 1 165 9 is_stmt 1
 165:src/exceptionHandler.cpp ****         __putc('0');
 836              		.loc 1 165 15 is_stmt 0
 837 0518 13050003 		li	a0,48
 838 051c 97000000 		call	__putc@plt
 838      E7800000 
 839              	.LVL116:
 166:src/exceptionHandler.cpp ****         __putc('x');
 840              		.loc 1 166 9 is_stmt 1
 166:src/exceptionHandler.cpp ****         __putc('x');
 841              		.loc 1 166 15 is_stmt 0
 842 0524 13058007 		li	a0,120
 843 0528 97000000 		call	__putc@plt
 843      E7800000 
 844              	.LVL117:
 167:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 845              		.loc 1 167 9 is_stmt 1
 846              	.LBB19:
 167:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 847              		.loc 1 167 17 is_stmt 0
 848 0530 9304F000 		li	s1,15
 849              	.LVL118:
 850 0534 6F004001 		j	.L28
 851              	.LVL119:
 852              	.L26:
 853              	.LBB20:
 172:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 854              		.loc 1 172 17 is_stmt 1
 172:src/exceptionHandler.cpp ****                 __putc('A' + tmp - 10);
 855              		.loc 1 172 23 is_stmt 0
 856 0538 13057503 		addi	a0,a0,55
 857              	.LVL120:
 858 053c 97000000 		call	__putc@plt
 858      E7800000 
 859              	.LVL121:
 860              	.L27:
 861              	.LBE20:
 167:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 862              		.loc 1 167 9 is_stmt 1 discriminator 2
 863 0544 9B84F4FF 		addiw	s1,s1,-1
 864              	.LVL122:
 865              	.L28:
 167:src/exceptionHandler.cpp ****         for(int i = 15; i >= 0; i--){
 866              		.loc 1 167 27 discriminator 1
 867 0548 63C40402 		bltz	s1,.L25
 868              	.LBB21:
 168:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 869              		.loc 1 168 13
 168:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 870              		.loc 1 168 36 is_stmt 0
 871 054c 1B952400 		slliw	a0,s1,2
 168:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 872              		.loc 1 168 30
 873 0550 3355A900 		srl	a0,s2,a0
 168:src/exceptionHandler.cpp ****             uint64 tmp = (pc >> (i * 4)) & 0xF;
 874              		.loc 1 168 20
 875 0554 1375F500 		andi	a0,a0,15
GAS LISTING /tmp/ccqmVd4y.s 			page 26


 876              	.LVL123:
 169:src/exceptionHandler.cpp ****             if(tmp < 10){
 877              		.loc 1 169 13 is_stmt 1
 878 0558 93079000 		li	a5,9
 879 055c E3EEA7FC 		bgtu	a0,a5,.L26
 170:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 880              		.loc 1 170 17
 170:src/exceptionHandler.cpp ****                 __putc('0' + tmp);
 881              		.loc 1 170 23 is_stmt 0
 882 0560 13050503 		addi	a0,a0,48
 883              	.LVL124:
 884 0564 97000000 		call	__putc@plt
 884      E7800000 
 885              	.LVL125:
 886 056c 6FF09FFD 		j	.L27
 887              	.LVL126:
 888              	.L25:
 889              	.LBE21:
 890              	.LBE19:
 175:src/exceptionHandler.cpp ****         assert(false);
 891              		.loc 1 175 9 is_stmt 1
 175:src/exceptionHandler.cpp ****         assert(false);
 892              		.loc 1 175 9
 893 0570 97060000 		lla	a3,.LC0
 893      93860600 
 894 0578 1306F00A 		li	a2,175
 895 057c 97050000 		lla	a1,.LC1
 895      93850500 
 896 0584 17050000 		lla	a0,.LC2
 896      13050500 
 897 058c 97000000 		call	_Z13assert_failedPKcS0_jS0_@plt
 897      E7800000 
 898              	.LVL127:
 175:src/exceptionHandler.cpp ****         assert(false);
 899              		.loc 1 175 22
 900              	.LBE18:
 901 0594 6FF01FB4 		j	.L1
 902              	.LVL128:
 903              	.L35:
 178:src/exceptionHandler.cpp ****         __putc('.');
 904              		.loc 1 178 9
 178:src/exceptionHandler.cpp ****         __putc('.');
 905              		.loc 1 178 15 is_stmt 0
 906 0598 1305E002 		li	a0,46
 907 059c 97000000 		call	__putc@plt
 907      E7800000 
 908              	.LVL129:
 179:src/exceptionHandler.cpp ****         Timer::getInstance().tick();
 909              		.loc 1 179 9 is_stmt 1
 179:src/exceptionHandler.cpp ****         Timer::getInstance().tick();
 910              		.loc 1 179 28 is_stmt 0
 911 05a4 97000000 		call	_ZN5Timer11getInstanceEv@plt
 911      E7800000 
 912              	.LVL130:
 179:src/exceptionHandler.cpp ****         Timer::getInstance().tick();
 913              		.loc 1 179 34
 914 05ac 97000000 		call	_ZN5Timer4tickEv@plt
GAS LISTING /tmp/ccqmVd4y.s 			page 27


 914      E7800000 
 915              	.LVL131:
 180:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc));
 916              		.loc 1 180 9 is_stmt 1
 180:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sepc, %0" :: "r"(sepc));
 917              		.loc 1 180 55 is_stmt 0
 918              	#APP
 919              	# 180 "src/exceptionHandler.cpp" 1
 181:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
 920              		csrw sepc, s1
 921              	# 0 "" 2
 922              		.loc 1 181 9 is_stmt 1
 181:src/exceptionHandler.cpp ****         __asm__ volatile("csrw sstatus, %0" :: "r"(sstatus));
 923              		.loc 1 181 61 is_stmt 0
 924              	# 181 "src/exceptionHandler.cpp" 1
 182:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
 925              		csrw sstatus, s2
 926              	# 0 "" 2
 927              		.loc 1 182 9 is_stmt 1
 182:src/exceptionHandler.cpp ****         __asm__ volatile("csrc sip, 0x2");
 928              		.loc 1 182 42 is_stmt 0
 929              	# 182 "src/exceptionHandler.cpp" 1
 930              		csrc sip, 0x2
 931              	# 0 "" 2
 932              	#NO_APP
 933 05c0 6FF05FB1 		j	.L1
 934              	.LBE26:
 935              	.LBE32:
 936              	.LBE43:
 937              		.cfi_endproc
 938              	.LFE1:
 940              	.Letext0:
 941              		.file 3 "./lib/hw.h"
 942              		.file 4 "./h/types.h"
 943              		.file 5 "./h/thread.h"
 944              		.file 6 "./h/sem.h"
 945              		.file 7 "./h/timer.h"
 946              		.file 8 "./lib/console.h"
 947              		.file 9 "./h/assert.h"
GAS LISTING /tmp/ccqmVd4y.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 exceptionHandler.cpp
     /tmp/ccqmVd4y.s:20     .text:0000000000000000 exceptionHandler
     /tmp/ccqmVd4y.s:24     .text:0000000000000000 .L0 
     /tmp/ccqmVd4y.s:25     .text:0000000000000000 .L0 
     /tmp/ccqmVd4y.s:26     .text:0000000000000004 .L0 
     /tmp/ccqmVd4y.s:35     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:36     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:37     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:38     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:39     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:40     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:41     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:42     .text:0000000000000024 .L0 
     /tmp/ccqmVd4y.s:44     .text:0000000000000028 .L0 
     /tmp/ccqmVd4y.s:46     .text:0000000000000028 .L0 
     /tmp/ccqmVd4y.s:47     .text:0000000000000028 .L0 
src/exceptionHandler.cpp:22     .text:0000000000000028 .L0 
     /tmp/ccqmVd4y.s:54     .text:000000000000002c .L0 
src/exceptionHandler.cpp:23     .text:000000000000002c .L0 
     /tmp/ccqmVd4y.s:60     .text:0000000000000030 .L0 
src/exceptionHandler.cpp:24     .text:0000000000000030 .L0 
     /tmp/ccqmVd4y.s:66     .text:0000000000000034 .L0 
src/exceptionHandler.cpp:25     .text:0000000000000034 .L0 
     /tmp/ccqmVd4y.s:72     .text:0000000000000038 .L0 
src/exceptionHandler.cpp:26     .text:0000000000000038 .L0 
     /tmp/ccqmVd4y.s:78     .text:000000000000003c .L0 
     /tmp/ccqmVd4y.s:79     .text:000000000000003c .L0 
src/exceptionHandler.cpp:29     .text:000000000000003c .L0 
     /tmp/ccqmVd4y.s:85     .text:0000000000000040 .L0 
     /tmp/ccqmVd4y.s:86     .text:0000000000000040 .L0 
src/exceptionHandler.cpp:32     .text:0000000000000040 .L0 
     /tmp/ccqmVd4y.s:92     .text:0000000000000044 .L0 
     /tmp/ccqmVd4y.s:93     .text:0000000000000044 .L0 
src/exceptionHandler.cpp:35     .text:0000000000000044 .L0 
     /tmp/ccqmVd4y.s:99     .text:0000000000000048 .L0 
     /tmp/ccqmVd4y.s:102    .text:0000000000000048 .L0 
     /tmp/ccqmVd4y.s:103    .text:0000000000000048 .L0 
     /tmp/ccqmVd4y.s:105    .text:000000000000004c .L0 
     /tmp/ccqmVd4y.s:111    .text:0000000000000054 .L0 
     /tmp/ccqmVd4y.s:120    .text:000000000000005c .L0 
     /tmp/ccqmVd4y.s:123    .text:0000000000000064 .L0 
     /tmp/ccqmVd4y.s:128    .text:0000000000000074 .L0 
     /tmp/ccqmVd4y.s:129    .text:0000000000000074 .L0 
     /tmp/ccqmVd4y.s:136    .text:0000000000000080 .L0 
     /tmp/ccqmVd4y.s:141    .text:0000000000000084 .L0 
     /tmp/ccqmVd4y.s:225    .text:00000000000000a8 .L0 
     /tmp/ccqmVd4y.s:229    .text:00000000000000a8 .L0 
     /tmp/ccqmVd4y.s:232    .text:00000000000000a8 .L0 
     /tmp/ccqmVd4y.s:233    .text:00000000000000a8 .L0 
     /tmp/ccqmVd4y.s:240    .text:00000000000000c0 .L0 
     /tmp/ccqmVd4y.s:241    .text:00000000000000c0 .L0 
src/exceptionHandler.cpp:89     .text:00000000000000c0 .L0 
     /tmp/ccqmVd4y.s:247    .text:00000000000000c4 .L0 
     /tmp/ccqmVd4y.s:249    .text:00000000000000c4 .L0 
src/exceptionHandler.cpp:90     .text:00000000000000c8 .L0 
     /tmp/ccqmVd4y.s:257    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccqmVd4y.s 			page 29


src/exceptionHandler.cpp:91     .text:00000000000000cc .L0 
     /tmp/ccqmVd4y.s:262    .text:00000000000000d0 .L0 
src/exceptionHandler.cpp:92     .text:00000000000000d0 .L0 
     /tmp/ccqmVd4y.s:271    .text:00000000000000d4 .L0 
     /tmp/ccqmVd4y.s:272    .text:00000000000000d8 .L0 
     /tmp/ccqmVd4y.s:273    .text:00000000000000d8 .L0 
     /tmp/ccqmVd4y.s:275    .text:00000000000000dc .L0 
     /tmp/ccqmVd4y.s:276    .text:00000000000000dc .L0 
     /tmp/ccqmVd4y.s:278    .text:00000000000000e0 .L0 
     /tmp/ccqmVd4y.s:280    .text:00000000000000e4 .L0 
     /tmp/ccqmVd4y.s:282    .text:00000000000000e8 .L0 
     /tmp/ccqmVd4y.s:285    .text:00000000000000ec .L0 
     /tmp/ccqmVd4y.s:288    .text:00000000000000f0 .L0 
     /tmp/ccqmVd4y.s:291    .text:00000000000000f4 .L0 
     /tmp/ccqmVd4y.s:294    .text:00000000000000f8 .L0 
     /tmp/ccqmVd4y.s:298    .text:00000000000000fc .L0 
     /tmp/ccqmVd4y.s:301    .text:00000000000000fc .L0 
     /tmp/ccqmVd4y.s:304    .text:00000000000000fc .L0 
     /tmp/ccqmVd4y.s:307    .text:00000000000000fc .L0 
     /tmp/ccqmVd4y.s:308    .text:00000000000000fc .L0 
     /tmp/ccqmVd4y.s:314    .text:0000000000000114 .L0 
     /tmp/ccqmVd4y.s:318    .text:0000000000000118 .L0 
     /tmp/ccqmVd4y.s:319    .text:0000000000000118 .L0 
     /tmp/ccqmVd4y.s:320    .text:0000000000000118 .L0 
     /tmp/ccqmVd4y.s:324    .text:0000000000000124 .L0 
     /tmp/ccqmVd4y.s:325    .text:0000000000000124 .L0 
     /tmp/ccqmVd4y.s:333    .text:0000000000000140 .L0 
     /tmp/ccqmVd4y.s:337    .text:0000000000000144 .L0 
     /tmp/ccqmVd4y.s:338    .text:0000000000000144 .L0 
     /tmp/ccqmVd4y.s:339    .text:0000000000000144 .L0 
     /tmp/ccqmVd4y.s:342    .text:000000000000014c .L0 
     /tmp/ccqmVd4y.s:346    .text:0000000000000150 .L0 
     /tmp/ccqmVd4y.s:347    .text:0000000000000150 .L0 
     /tmp/ccqmVd4y.s:348    .text:0000000000000150 .L0 
     /tmp/ccqmVd4y.s:352    .text:0000000000000158 .L0 
     /tmp/ccqmVd4y.s:353    .text:0000000000000158 .L0 
     /tmp/ccqmVd4y.s:356    .text:000000000000015c .L0 
     /tmp/ccqmVd4y.s:360    .text:0000000000000160 .L0 
     /tmp/ccqmVd4y.s:361    .text:0000000000000160 .L0 
     /tmp/ccqmVd4y.s:362    .text:0000000000000160 .L0 
     /tmp/ccqmVd4y.s:369    .text:0000000000000178 .L0 
     /tmp/ccqmVd4y.s:370    .text:0000000000000178 .L0 
     /tmp/ccqmVd4y.s:373    .text:000000000000017c .L0 
     /tmp/ccqmVd4y.s:377    .text:0000000000000180 .L0 
     /tmp/ccqmVd4y.s:378    .text:0000000000000180 .L0 
     /tmp/ccqmVd4y.s:379    .text:0000000000000180 .L0 
     /tmp/ccqmVd4y.s:385    .text:0000000000000190 .L0 
     /tmp/ccqmVd4y.s:386    .text:0000000000000190 .L0 
     /tmp/ccqmVd4y.s:389    .text:0000000000000194 .L0 
     /tmp/ccqmVd4y.s:393    .text:0000000000000198 .L0 
     /tmp/ccqmVd4y.s:394    .text:0000000000000198 .L0 
     /tmp/ccqmVd4y.s:395    .text:0000000000000198 .L0 
     /tmp/ccqmVd4y.s:400    .text:00000000000001a4 .L0 
     /tmp/ccqmVd4y.s:401    .text:00000000000001a4 .L0 
     /tmp/ccqmVd4y.s:404    .text:00000000000001a8 .L0 
     /tmp/ccqmVd4y.s:408    .text:00000000000001ac .L0 
     /tmp/ccqmVd4y.s:409    .text:00000000000001ac .L0 
GAS LISTING /tmp/ccqmVd4y.s 			page 30


     /tmp/ccqmVd4y.s:410    .text:00000000000001ac .L0 
     /tmp/ccqmVd4y.s:415    .text:00000000000001b8 .L0 
     /tmp/ccqmVd4y.s:416    .text:00000000000001b8 .L0 
     /tmp/ccqmVd4y.s:419    .text:00000000000001bc .L0 
     /tmp/ccqmVd4y.s:423    .text:00000000000001c0 .L0 
     /tmp/ccqmVd4y.s:424    .text:00000000000001c0 .L0 
     /tmp/ccqmVd4y.s:425    .text:00000000000001c0 .L0 
     /tmp/ccqmVd4y.s:430    .text:00000000000001cc .L0 
     /tmp/ccqmVd4y.s:431    .text:00000000000001cc .L0 
     /tmp/ccqmVd4y.s:434    .text:00000000000001d0 .L0 
     /tmp/ccqmVd4y.s:438    .text:00000000000001d4 .L0 
     /tmp/ccqmVd4y.s:439    .text:00000000000001d4 .L0 
     /tmp/ccqmVd4y.s:440    .text:00000000000001d4 .L0 
     /tmp/ccqmVd4y.s:443    .text:00000000000001dc .L0 
     /tmp/ccqmVd4y.s:447    .text:00000000000001e8 .L0 
     /tmp/ccqmVd4y.s:451    .text:00000000000001ec .L0 
     /tmp/ccqmVd4y.s:452    .text:00000000000001ec .L0 
     /tmp/ccqmVd4y.s:453    .text:00000000000001ec .L0 
     /tmp/ccqmVd4y.s:456    .text:00000000000001f4 .L0 
     /tmp/ccqmVd4y.s:460    .text:00000000000001f8 .L0 
     /tmp/ccqmVd4y.s:461    .text:00000000000001f8 .L0 
     /tmp/ccqmVd4y.s:462    .text:00000000000001f8 .L0 
     /tmp/ccqmVd4y.s:467    .text:0000000000000204 .L0 
     /tmp/ccqmVd4y.s:468    .text:0000000000000204 .L0 
     /tmp/ccqmVd4y.s:471    .text:0000000000000208 .L0 
     /tmp/ccqmVd4y.s:475    .text:000000000000020c .L0 
     /tmp/ccqmVd4y.s:482    .text:0000000000000214 .L0 
     /tmp/ccqmVd4y.s:483    .text:0000000000000214 .L0 
     /tmp/ccqmVd4y.s:487    .text:0000000000000220 .L0 
     /tmp/ccqmVd4y.s:488    .text:0000000000000220 .L0 
     /tmp/ccqmVd4y.s:492    .text:000000000000022c .L0 
     /tmp/ccqmVd4y.s:493    .text:000000000000022c .L0 
     /tmp/ccqmVd4y.s:497    .text:0000000000000238 .L0 
     /tmp/ccqmVd4y.s:498    .text:0000000000000238 .L0 
     /tmp/ccqmVd4y.s:502    .text:0000000000000244 .L0 
     /tmp/ccqmVd4y.s:503    .text:0000000000000244 .L0 
     /tmp/ccqmVd4y.s:507    .text:0000000000000250 .L0 
     /tmp/ccqmVd4y.s:508    .text:0000000000000250 .L0 
     /tmp/ccqmVd4y.s:512    .text:000000000000025c .L0 
     /tmp/ccqmVd4y.s:513    .text:000000000000025c .L0 
     /tmp/ccqmVd4y.s:517    .text:0000000000000268 .L0 
     /tmp/ccqmVd4y.s:518    .text:0000000000000268 .L0 
     /tmp/ccqmVd4y.s:522    .text:0000000000000274 .L0 
     /tmp/ccqmVd4y.s:523    .text:0000000000000274 .L0 
     /tmp/ccqmVd4y.s:527    .text:0000000000000280 .L0 
     /tmp/ccqmVd4y.s:528    .text:0000000000000280 .L0 
     /tmp/ccqmVd4y.s:532    .text:000000000000028c .L0 
     /tmp/ccqmVd4y.s:533    .text:000000000000028c .L0 
     /tmp/ccqmVd4y.s:537    .text:0000000000000298 .L0 
     /tmp/ccqmVd4y.s:538    .text:0000000000000298 .L0 
     /tmp/ccqmVd4y.s:542    .text:00000000000002a4 .L0 
     /tmp/ccqmVd4y.s:543    .text:00000000000002a4 .L0 
     /tmp/ccqmVd4y.s:547    .text:00000000000002b0 .L0 
     /tmp/ccqmVd4y.s:548    .text:00000000000002b0 .L0 
     /tmp/ccqmVd4y.s:552    .text:00000000000002bc .L0 
     /tmp/ccqmVd4y.s:553    .text:00000000000002bc .L0 
     /tmp/ccqmVd4y.s:557    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccqmVd4y.s 			page 31


     /tmp/ccqmVd4y.s:558    .text:00000000000002c8 .L0 
     /tmp/ccqmVd4y.s:562    .text:00000000000002d4 .L0 
     /tmp/ccqmVd4y.s:563    .text:00000000000002d4 .L0 
     /tmp/ccqmVd4y.s:567    .text:00000000000002e0 .L0 
     /tmp/ccqmVd4y.s:568    .text:00000000000002e0 .L0 
     /tmp/ccqmVd4y.s:572    .text:00000000000002ec .L0 
     /tmp/ccqmVd4y.s:573    .text:00000000000002ec .L0 
     /tmp/ccqmVd4y.s:577    .text:00000000000002f8 .L0 
     /tmp/ccqmVd4y.s:578    .text:00000000000002f8 .L0 
     /tmp/ccqmVd4y.s:582    .text:0000000000000304 .L0 
     /tmp/ccqmVd4y.s:583    .text:0000000000000304 .L0 
     /tmp/ccqmVd4y.s:587    .text:0000000000000310 .L0 
     /tmp/ccqmVd4y.s:588    .text:0000000000000310 .L0 
src/exceptionHandler.cpp:117    .text:0000000000000310 .L0 
     /tmp/ccqmVd4y.s:595    .text:0000000000000314 .L0 
     /tmp/ccqmVd4y.s:597    .text:0000000000000314 .L0 
     /tmp/ccqmVd4y.s:601    .text:0000000000000320 .L0 
     /tmp/ccqmVd4y.s:602    .text:0000000000000320 .L0 
     /tmp/ccqmVd4y.s:606    .text:000000000000032c .L0 
     /tmp/ccqmVd4y.s:607    .text:000000000000032c .L0 
     /tmp/ccqmVd4y.s:611    .text:0000000000000338 .L0 
     /tmp/ccqmVd4y.s:612    .text:0000000000000338 .L0 
     /tmp/ccqmVd4y.s:616    .text:0000000000000344 .L0 
     /tmp/ccqmVd4y.s:617    .text:0000000000000344 .L0 
     /tmp/ccqmVd4y.s:621    .text:0000000000000350 .L0 
     /tmp/ccqmVd4y.s:622    .text:0000000000000350 .L0 
     /tmp/ccqmVd4y.s:626    .text:000000000000035c .L0 
     /tmp/ccqmVd4y.s:627    .text:000000000000035c .L0 
     /tmp/ccqmVd4y.s:632    .text:0000000000000368 .L0 
     /tmp/ccqmVd4y.s:633    .text:0000000000000368 .L0 
     /tmp/ccqmVd4y.s:640    .text:0000000000000370 .L0 
     /tmp/ccqmVd4y.s:641    .text:0000000000000370 .L0 
     /tmp/ccqmVd4y.s:648    .text:000000000000037c .L0 
     /tmp/ccqmVd4y.s:652    .text:0000000000000380 .L0 
     /tmp/ccqmVd4y.s:655    .text:0000000000000384 .L0 
     /tmp/ccqmVd4y.s:656    .text:0000000000000384 .L0 
     /tmp/ccqmVd4y.s:658    .text:0000000000000388 .L0 
     /tmp/ccqmVd4y.s:660    .text:000000000000038c .L0 
     /tmp/ccqmVd4y.s:663    .text:0000000000000390 .L0 
     /tmp/ccqmVd4y.s:666    .text:0000000000000398 .L0 
     /tmp/ccqmVd4y.s:667    .text:0000000000000398 .L0 
     /tmp/ccqmVd4y.s:677    .text:00000000000003a8 .L0 
     /tmp/ccqmVd4y.s:678    .text:00000000000003a8 .L0 
     /tmp/ccqmVd4y.s:686    .text:00000000000003cc .L0 
     /tmp/ccqmVd4y.s:692    .text:00000000000003d0 .L0 
     /tmp/ccqmVd4y.s:693    .text:00000000000003d0 .L0 
     /tmp/ccqmVd4y.s:697    .text:00000000000003dc .L0 
     /tmp/ccqmVd4y.s:698    .text:00000000000003dc .L0 
     /tmp/ccqmVd4y.s:702    .text:00000000000003e8 .L0 
     /tmp/ccqmVd4y.s:703    .text:00000000000003e8 .L0 
     /tmp/ccqmVd4y.s:707    .text:00000000000003f4 .L0 
     /tmp/ccqmVd4y.s:708    .text:00000000000003f4 .L0 
     /tmp/ccqmVd4y.s:712    .text:0000000000000400 .L0 
     /tmp/ccqmVd4y.s:713    .text:0000000000000400 .L0 
     /tmp/ccqmVd4y.s:717    .text:000000000000040c .L0 
     /tmp/ccqmVd4y.s:718    .text:000000000000040c .L0 
     /tmp/ccqmVd4y.s:722    .text:0000000000000418 .L0 
GAS LISTING /tmp/ccqmVd4y.s 			page 32


     /tmp/ccqmVd4y.s:723    .text:0000000000000418 .L0 
     /tmp/ccqmVd4y.s:727    .text:0000000000000424 .L0 
     /tmp/ccqmVd4y.s:728    .text:0000000000000424 .L0 
     /tmp/ccqmVd4y.s:732    .text:0000000000000430 .L0 
     /tmp/ccqmVd4y.s:733    .text:0000000000000430 .L0 
     /tmp/ccqmVd4y.s:737    .text:000000000000043c .L0 
     /tmp/ccqmVd4y.s:738    .text:000000000000043c .L0 
     /tmp/ccqmVd4y.s:742    .text:0000000000000448 .L0 
     /tmp/ccqmVd4y.s:743    .text:0000000000000448 .L0 
     /tmp/ccqmVd4y.s:747    .text:0000000000000454 .L0 
     /tmp/ccqmVd4y.s:748    .text:0000000000000454 .L0 
     /tmp/ccqmVd4y.s:752    .text:0000000000000460 .L0 
     /tmp/ccqmVd4y.s:753    .text:0000000000000460 .L0 
     /tmp/ccqmVd4y.s:757    .text:000000000000046c .L0 
     /tmp/ccqmVd4y.s:758    .text:000000000000046c .L0 
     /tmp/ccqmVd4y.s:762    .text:0000000000000478 .L0 
     /tmp/ccqmVd4y.s:763    .text:0000000000000478 .L0 
     /tmp/ccqmVd4y.s:767    .text:0000000000000484 .L0 
     /tmp/ccqmVd4y.s:768    .text:0000000000000484 .L0 
     /tmp/ccqmVd4y.s:772    .text:0000000000000490 .L0 
     /tmp/ccqmVd4y.s:773    .text:0000000000000490 .L0 
     /tmp/ccqmVd4y.s:777    .text:000000000000049c .L0 
     /tmp/ccqmVd4y.s:778    .text:000000000000049c .L0 
     /tmp/ccqmVd4y.s:782    .text:00000000000004a8 .L0 
     /tmp/ccqmVd4y.s:783    .text:00000000000004a8 .L0 
     /tmp/ccqmVd4y.s:787    .text:00000000000004b4 .L0 
     /tmp/ccqmVd4y.s:788    .text:00000000000004b4 .L0 
     /tmp/ccqmVd4y.s:792    .text:00000000000004c0 .L0 
     /tmp/ccqmVd4y.s:793    .text:00000000000004c0 .L0 
     /tmp/ccqmVd4y.s:797    .text:00000000000004cc .L0 
     /tmp/ccqmVd4y.s:798    .text:00000000000004cc .L0 
     /tmp/ccqmVd4y.s:802    .text:00000000000004d8 .L0 
     /tmp/ccqmVd4y.s:803    .text:00000000000004d8 .L0 
src/exceptionHandler.cpp:159    .text:00000000000004d8 .L0 
     /tmp/ccqmVd4y.s:810    .text:00000000000004dc .L0 
     /tmp/ccqmVd4y.s:812    .text:00000000000004dc .L0 
     /tmp/ccqmVd4y.s:816    .text:00000000000004e8 .L0 
     /tmp/ccqmVd4y.s:817    .text:00000000000004e8 .L0 
     /tmp/ccqmVd4y.s:821    .text:00000000000004f4 .L0 
     /tmp/ccqmVd4y.s:822    .text:00000000000004f4 .L0 
     /tmp/ccqmVd4y.s:826    .text:0000000000000500 .L0 
     /tmp/ccqmVd4y.s:827    .text:0000000000000500 .L0 
     /tmp/ccqmVd4y.s:831    .text:000000000000050c .L0 
     /tmp/ccqmVd4y.s:832    .text:000000000000050c .L0 
     /tmp/ccqmVd4y.s:836    .text:0000000000000518 .L0 
     /tmp/ccqmVd4y.s:837    .text:0000000000000518 .L0 
     /tmp/ccqmVd4y.s:841    .text:0000000000000524 .L0 
     /tmp/ccqmVd4y.s:842    .text:0000000000000524 .L0 
     /tmp/ccqmVd4y.s:847    .text:0000000000000530 .L0 
     /tmp/ccqmVd4y.s:848    .text:0000000000000530 .L0 
     /tmp/ccqmVd4y.s:855    .text:0000000000000538 .L0 
     /tmp/ccqmVd4y.s:856    .text:0000000000000538 .L0 
     /tmp/ccqmVd4y.s:863    .text:0000000000000544 .L0 
     /tmp/ccqmVd4y.s:867    .text:0000000000000548 .L0 
     /tmp/ccqmVd4y.s:870    .text:000000000000054c .L0 
     /tmp/ccqmVd4y.s:871    .text:000000000000054c .L0 
     /tmp/ccqmVd4y.s:873    .text:0000000000000550 .L0 
GAS LISTING /tmp/ccqmVd4y.s 			page 33


     /tmp/ccqmVd4y.s:875    .text:0000000000000554 .L0 
     /tmp/ccqmVd4y.s:878    .text:0000000000000558 .L0 
     /tmp/ccqmVd4y.s:881    .text:0000000000000560 .L0 
     /tmp/ccqmVd4y.s:882    .text:0000000000000560 .L0 
     /tmp/ccqmVd4y.s:892    .text:0000000000000570 .L0 
     /tmp/ccqmVd4y.s:893    .text:0000000000000570 .L0 
     /tmp/ccqmVd4y.s:901    .text:0000000000000594 .L0 
     /tmp/ccqmVd4y.s:905    .text:0000000000000598 .L0 
     /tmp/ccqmVd4y.s:906    .text:0000000000000598 .L0 
     /tmp/ccqmVd4y.s:910    .text:00000000000005a4 .L0 
     /tmp/ccqmVd4y.s:911    .text:00000000000005a4 .L0 
     /tmp/ccqmVd4y.s:914    .text:00000000000005ac .L0 
     /tmp/ccqmVd4y.s:917    .text:00000000000005b4 .L0 
src/exceptionHandler.cpp:180    .text:00000000000005b4 .L0 
     /tmp/ccqmVd4y.s:923    .text:00000000000005b8 .L0 
src/exceptionHandler.cpp:181    .text:00000000000005b8 .L0 
     /tmp/ccqmVd4y.s:928    .text:00000000000005bc .L0 
src/exceptionHandler.cpp:182    .text:00000000000005bc .L0 
     /tmp/ccqmVd4y.s:937    .text:00000000000005c4 .L0 
     /tmp/ccqmVd4y.s:948    .text:00000000000005c4 .L0 
     /tmp/ccqmVd4y.s:154    .rodata:0000000000000000 .L5
     /tmp/ccqmVd4y.s:146    .text:0000000000000090 .L0 
     /tmp/ccqmVd4y.s:234    .text:00000000000000ac .L0 
     /tmp/ccqmVd4y.s:309    .text:0000000000000100 .L0 
     /tmp/ccqmVd4y.s:363    .text:0000000000000164 .L0 
     /tmp/ccqmVd4y.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccqmVd4y.s:678    .text:00000000000003a8 .L0 
     /tmp/ccqmVd4y.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccqmVd4y.s:680    .text:00000000000003b4 .L0 
     /tmp/ccqmVd4y.s:14     .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccqmVd4y.s:681    .text:00000000000003bc .L0 
     /tmp/ccqmVd4y.s:893    .text:0000000000000570 .L0 
     /tmp/ccqmVd4y.s:895    .text:000000000000057c .L0 
     /tmp/ccqmVd4y.s:896    .text:0000000000000584 .L0 
     /tmp/ccqmVd4y.s:138    .text:0000000000000084 .L32
     /tmp/ccqmVd4y.s:478    .text:0000000000000214 .L33
     /tmp/ccqmVd4y.s:688    .text:00000000000003d0 .L34
     /tmp/ccqmVd4y.s:903    .text:0000000000000598 .L35
     /tmp/ccqmVd4y.s:268    .text:00000000000000d4 .L1
     /tmp/ccqmVd4y.s:473    .text:000000000000020c .L30
     /tmp/ccqmVd4y.s:239    .text:00000000000000c0 .L3
     /tmp/ccqmVd4y.s:650    .text:0000000000000380 .L23
     /tmp/ccqmVd4y.s:673    .text:00000000000003a8 .L20
     /tmp/ccqmVd4y.s:637    .text:0000000000000370 .L21
     /tmp/ccqmVd4y.s:645    .text:000000000000037c .L22
     /tmp/ccqmVd4y.s:865    .text:0000000000000548 .L28
     /tmp/ccqmVd4y.s:888    .text:0000000000000570 .L25
     /tmp/ccqmVd4y.s:852    .text:0000000000000538 .L26
     /tmp/ccqmVd4y.s:860    .text:0000000000000544 .L27
     /tmp/ccqmVd4y.s:223    .text:00000000000000a8 .L17
     /tmp/ccqmVd4y.s:297    .text:00000000000000fc .L16
     /tmp/ccqmVd4y.s:316    .text:0000000000000118 .L15
     /tmp/ccqmVd4y.s:335    .text:0000000000000144 .L14
     /tmp/ccqmVd4y.s:344    .text:0000000000000150 .L13
     /tmp/ccqmVd4y.s:358    .text:0000000000000160 .L12
     /tmp/ccqmVd4y.s:375    .text:0000000000000180 .L11
     /tmp/ccqmVd4y.s:391    .text:0000000000000198 .L10
GAS LISTING /tmp/ccqmVd4y.s 			page 34


     /tmp/ccqmVd4y.s:406    .text:00000000000001ac .L9
     /tmp/ccqmVd4y.s:421    .text:00000000000001c0 .L8
     /tmp/ccqmVd4y.s:436    .text:00000000000001d4 .L7
     /tmp/ccqmVd4y.s:449    .text:00000000000001ec .L6
     /tmp/ccqmVd4y.s:458    .text:00000000000001f8 .L4
     /tmp/ccqmVd4y.s:3106   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccqmVd4y.s:4478   .debug_str:00000000000005aa .LASF117
     /tmp/ccqmVd4y.s:4298   .debug_str:00000000000000e2 .LASF118
     /tmp/ccqmVd4y.s:4422   .debug_str:000000000000041b .LASF119
     /tmp/ccqmVd4y.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccqmVd4y.s:940    .text:00000000000005c4 .Letext0
     /tmp/ccqmVd4y.s:4270   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccqmVd4y.s:4410   .debug_str:00000000000003d4 .LASF0
     /tmp/ccqmVd4y.s:4426   .debug_str:000000000000046b .LASF1
     /tmp/ccqmVd4y.s:4394   .debug_str:0000000000000341 .LASF2
     /tmp/ccqmVd4y.s:4458   .debug_str:000000000000052e .LASF3
     /tmp/ccqmVd4y.s:4362   .debug_str:000000000000026a .LASF4
     /tmp/ccqmVd4y.s:4460   .debug_str:0000000000000535 .LASF5
     /tmp/ccqmVd4y.s:4302   .debug_str:0000000000000105 .LASF6
     /tmp/ccqmVd4y.s:4324   .debug_str:000000000000019d .LASF7
     /tmp/ccqmVd4y.s:4428   .debug_str:000000000000047e .LASF8
     /tmp/ccqmVd4y.s:4408   .debug_str:00000000000003c1 .LASF9
     /tmp/ccqmVd4y.s:4490   .debug_str:00000000000006b8 .LASF10
     /tmp/ccqmVd4y.s:4346   .debug_str:0000000000000226 .LASF11
     /tmp/ccqmVd4y.s:4438   .debug_str:00000000000004b0 .LASF12
     /tmp/ccqmVd4y.s:4482   .debug_str:000000000000067a .LASF13
     /tmp/ccqmVd4y.s:4304   .debug_str:000000000000010c .LASF14
     /tmp/ccqmVd4y.s:4280   .debug_str:000000000000003c .LASF15
     /tmp/ccqmVd4y.s:4312   .debug_str:0000000000000140 .LASF16
     /tmp/ccqmVd4y.s:4456   .debug_str:0000000000000518 .LASF17
     /tmp/ccqmVd4y.s:4318   .debug_str:0000000000000161 .LASF18
     /tmp/ccqmVd4y.s:4330   .debug_str:00000000000001c6 .LASF19
     /tmp/ccqmVd4y.s:4412   .debug_str:00000000000003e1 .LASF24
     /tmp/ccqmVd4y.s:4286   .debug_str:0000000000000078 .LASF38
     /tmp/ccqmVd4y.s:4348   .debug_str:0000000000000234 .LASF20
     /tmp/ccqmVd4y.s:4338   .debug_str:00000000000001fe .LASF21
     /tmp/ccqmVd4y.s:4510   .debug_str:0000000000000735 .LASF22
     /tmp/ccqmVd4y.s:4486   .debug_str:00000000000006aa .LASF23
     /tmp/ccqmVd4y.s:4344   .debug_str:0000000000000211 .LASF26
     /tmp/ccqmVd4y.s:4272   .debug_str:0000000000000000 .LASF25
     /tmp/ccqmVd4y.s:4420   .debug_str:0000000000000406 .LASF27
     /tmp/ccqmVd4y.s:4432   .debug_str:0000000000000498 .LASF28
     /tmp/ccqmVd4y.s:4382   .debug_str:00000000000002f2 .LASF29
     /tmp/ccqmVd4y.s:4398   .debug_str:0000000000000375 .LASF30
     /tmp/ccqmVd4y.s:4396   .debug_str:000000000000034f .LASF32
     /tmp/ccqmVd4y.s:4390   .debug_str:000000000000032d .LASF31
     /tmp/ccqmVd4y.s:4484   .debug_str:0000000000000689 .LASF33
     /tmp/ccqmVd4y.s:4310   .debug_str:0000000000000137 .LASF34
     /tmp/ccqmVd4y.s:4294   .debug_str:00000000000000ad .LASF35
     /tmp/ccqmVd4y.s:4480   .debug_str:000000000000066e .LASF47
     /tmp/ccqmVd4y.s:4322   .debug_str:000000000000017d .LASF49
     /tmp/ccqmVd4y.s:4288   .debug_str:000000000000008e .LASF36
     /tmp/ccqmVd4y.s:4416   .debug_str:00000000000003f6 .LASF59
     /tmp/ccqmVd4y.s:4358   .debug_str:000000000000025d .LASF37
     /tmp/ccqmVd4y.s:4512   .debug_str:000000000000073b .LASF39
     /tmp/ccqmVd4y.s:4450   .debug_str:00000000000004fe .LASF40
     /tmp/ccqmVd4y.s:4400   .debug_str:0000000000000387 .LASF41
GAS LISTING /tmp/ccqmVd4y.s 			page 35


     /tmp/ccqmVd4y.s:4430   .debug_str:0000000000000491 .LASF42
     /tmp/ccqmVd4y.s:4518   .debug_str:000000000000076c .LASF43
     /tmp/ccqmVd4y.s:4516   .debug_str:0000000000000765 .LASF44
     /tmp/ccqmVd4y.s:4284   .debug_str:0000000000000053 .LASF45
     /tmp/ccqmVd4y.s:4342   .debug_str:000000000000020c .LASF46
     /tmp/ccqmVd4y.s:4384   .debug_str:000000000000030b .LASF48
     /tmp/ccqmVd4y.s:4496   .debug_str:00000000000006e5 .LASF50
     /tmp/ccqmVd4y.s:4414   .debug_str:00000000000003ed .LASF120
     /tmp/ccqmVd4y.s:4472   .debug_str:000000000000057c .LASF121
     /tmp/ccqmVd4y.s:4462   .debug_str:0000000000000547 .LASF51
     /tmp/ccqmVd4y.s:4374   .debug_str:00000000000002ae .LASF52
     /tmp/ccqmVd4y.s:4326   .debug_str:00000000000001a4 .LASF122
     /tmp/ccqmVd4y.s:4366   .debug_str:000000000000027a .LASF53
     /tmp/ccqmVd4y.s:4526   .debug_str:0000000000000790 .LASF54
     /tmp/ccqmVd4y.s:4306   .debug_str:000000000000011c .LASF55
     /tmp/ccqmVd4y.s:4296   .debug_str:00000000000000ca .LASF56
     /tmp/ccqmVd4y.s:4332   .debug_str:00000000000001d0 .LASF57
     /tmp/ccqmVd4y.s:4514   .debug_str:000000000000074a .LASF58
     /tmp/ccqmVd4y.s:4492   .debug_str:00000000000006c8 .LASF61
     /tmp/ccqmVd4y.s:4468   .debug_str:000000000000056f .LASF123
     /tmp/ccqmVd4y.s:4446   .debug_str:00000000000004df .LASF124
     /tmp/ccqmVd4y.s:4372   .debug_str:00000000000002a7 .LASF60
     /tmp/ccqmVd4y.s:4368   .debug_str:0000000000000285 .LASF62
     /tmp/ccqmVd4y.s:4500   .debug_str:00000000000006fe .LASF63
     /tmp/ccqmVd4y.s:4476   .debug_str:00000000000005a1 .LASF64
     /tmp/ccqmVd4y.s:4444   .debug_str:00000000000004d6 .LASF65
     /tmp/ccqmVd4y.s:4364   .debug_str:0000000000000271 .LASF66
     /tmp/ccqmVd4y.s:4388   .debug_str:0000000000000322 .LASF67
     /tmp/ccqmVd4y.s:4392   .debug_str:000000000000033a .LASF68
     /tmp/ccqmVd4y.s:4274   .debug_str:000000000000000d .LASF69
     /tmp/ccqmVd4y.s:4440   .debug_str:00000000000004bf .LASF70
     /tmp/ccqmVd4y.s:4448   .debug_str:00000000000004f5 .LASF71
     /tmp/ccqmVd4y.s:4418   .debug_str:00000000000003ff .LASF72
     /tmp/ccqmVd4y.s:4356   .debug_str:0000000000000254 .LASF73
     /tmp/ccqmVd4y.s:4434   .debug_str:000000000000049d .LASF74
     /tmp/ccqmVd4y.s:4380   .debug_str:00000000000002eb .LASF75
     /tmp/ccqmVd4y.s:4314   .debug_str:000000000000014c .LASF125
     /tmp/ccqmVd4y.s:4424   .debug_str:0000000000000437 .LASF126
     /tmp/ccqmVd4y.s:4290   .debug_str:0000000000000096 .LASF76
     /tmp/ccqmVd4y.s:4378   .debug_str:00000000000002e2 .LASF77
     /tmp/ccqmVd4y.s:4360   .debug_str:0000000000000265 .LASF78
     /tmp/ccqmVd4y.s:4386   .debug_str:0000000000000310 .LASF79
     /tmp/ccqmVd4y.s:4340   .debug_str:0000000000000204 .LASF80
     /tmp/ccqmVd4y.s:4488   .debug_str:00000000000006b3 .LASF81
     /tmp/ccqmVd4y.s:4278   .debug_str:0000000000000028 .LASF82
     /tmp/ccqmVd4y.s:4498   .debug_str:00000000000006f8 .LASF83
     /tmp/ccqmVd4y.s:4404   .debug_str:000000000000039c .LASF84
     /tmp/ccqmVd4y.s:4522   .debug_str:0000000000000785 .LASF85
     /tmp/ccqmVd4y.s:4406   .debug_str:00000000000003af .LASF86
     /tmp/ccqmVd4y.s:4316   .debug_str:000000000000015a .LASF87
     /tmp/ccqmVd4y.s:4328   .debug_str:00000000000001b2 .LASF88
     /tmp/ccqmVd4y.s:4300   .debug_str:00000000000000fb .LASF89
     /tmp/ccqmVd4y.s:4436   .debug_str:00000000000004a6 .LASF90
     /tmp/ccqmVd4y.s:4320   .debug_str:0000000000000177 .LASF91
     /tmp/ccqmVd4y.s:4334   .debug_str:00000000000001dc .LASF92
     /tmp/ccqmVd4y.s:4276   .debug_str:0000000000000015 .LASF93
     /tmp/ccqmVd4y.s:4452   .debug_str:0000000000000506 .LASF94
GAS LISTING /tmp/ccqmVd4y.s 			page 36


     /tmp/ccqmVd4y.s:4402   .debug_str:0000000000000396 .LASF95
     /tmp/ccqmVd4y.s:4506   .debug_str:0000000000000717 .LASF96
     /tmp/ccqmVd4y.s:4524   .debug_str:000000000000078a .LASF97
     /tmp/ccqmVd4y.s:4292   .debug_str:000000000000009b .LASF98
     /tmp/ccqmVd4y.s:4508   .debug_str:0000000000000730 .LASF99
     /tmp/ccqmVd4y.s:4308   .debug_str:0000000000000126 .LASF100
     /tmp/ccqmVd4y.s:4464   .debug_str:000000000000054c .LASF101
     /tmp/ccqmVd4y.s:4376   .debug_str:00000000000002c3 .LASF102
     /tmp/ccqmVd4y.s:4442   .debug_str:00000000000004c8 .LASF103
     /tmp/ccqmVd4y.s:4504   .debug_str:0000000000000710 .LASF104
     /tmp/ccqmVd4y.s:4350   .debug_str:000000000000023a .LASF105
     /tmp/ccqmVd4y.s:4370   .debug_str:000000000000029a .LASF106
     /tmp/ccqmVd4y.s:4494   .debug_str:00000000000006e0 .LASF107
     /tmp/ccqmVd4y.s:4466   .debug_str:000000000000055e .LASF108
     /tmp/ccqmVd4y.s:21     .text:0000000000000000 .LFB1
     /tmp/ccqmVd4y.s:938    .text:00000000000005c4 .LFE1
     /tmp/ccqmVd4y.s:3827   .debug_loc:0000000000000000 .LLST0
     /tmp/ccqmVd4y.s:3838   .debug_loc:0000000000000036 .LLST1
     /tmp/ccqmVd4y.s:3849   .debug_loc:000000000000006c .LLST2
     /tmp/ccqmVd4y.s:3860   .debug_loc:00000000000000a2 .LLST3
     /tmp/ccqmVd4y.s:3871   .debug_loc:00000000000000d8 .LLST4
     /tmp/ccqmVd4y.s:4282   .debug_str:000000000000004c .LASF109
     /tmp/ccqmVd4y.s:3882   .debug_loc:000000000000010e .LLST5
     /tmp/ccqmVd4y.s:3989   .debug_loc:00000000000002a3 .LLST6
     /tmp/ccqmVd4y.s:4470   .debug_str:0000000000000577 .LASF110
     /tmp/ccqmVd4y.s:4008   .debug_loc:00000000000002ff .LLST7
     /tmp/ccqmVd4y.s:4502   .debug_str:0000000000000706 .LASF111
     /tmp/ccqmVd4y.s:4033   .debug_loc:0000000000000370 .LLST8
     /tmp/ccqmVd4y.s:4520   .debug_str:0000000000000771 .LASF127
     /tmp/ccqmVd4y.s:480    .text:0000000000000214 .LBB22
     /tmp/ccqmVd4y.s:685    .text:00000000000003cc .LBE22
     /tmp/ccqmVd4y.s:4095   .debug_loc:000000000000047e .LLST12
     /tmp/ccqmVd4y.s:631    .text:0000000000000368 .LBB23
     /tmp/ccqmVd4y.s:675    .text:00000000000003a8 .LBE23
     /tmp/ccqmVd4y.s:4102   .debug_loc:00000000000004a1 .LLST13
     /tmp/ccqmVd4y.s:4256   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccqmVd4y.s:4114   .debug_loc:00000000000004d8 .LLST14
     /tmp/ccqmVd4y.s:644    .text:000000000000037c .LVL80
     /tmp/ccqmVd4y.s:670    .text:00000000000003a4 .LVL84
     /tmp/ccqmVd4y.s:485    .text:0000000000000220 .LVL48
     /tmp/ccqmVd4y.s:490    .text:000000000000022c .LVL49
     /tmp/ccqmVd4y.s:495    .text:0000000000000238 .LVL50
     /tmp/ccqmVd4y.s:500    .text:0000000000000244 .LVL51
     /tmp/ccqmVd4y.s:505    .text:0000000000000250 .LVL52
     /tmp/ccqmVd4y.s:510    .text:000000000000025c .LVL53
     /tmp/ccqmVd4y.s:515    .text:0000000000000268 .LVL54
     /tmp/ccqmVd4y.s:520    .text:0000000000000274 .LVL55
     /tmp/ccqmVd4y.s:525    .text:0000000000000280 .LVL56
     /tmp/ccqmVd4y.s:530    .text:000000000000028c .LVL57
     /tmp/ccqmVd4y.s:535    .text:0000000000000298 .LVL58
     /tmp/ccqmVd4y.s:540    .text:00000000000002a4 .LVL59
     /tmp/ccqmVd4y.s:545    .text:00000000000002b0 .LVL60
     /tmp/ccqmVd4y.s:550    .text:00000000000002bc .LVL61
     /tmp/ccqmVd4y.s:555    .text:00000000000002c8 .LVL62
     /tmp/ccqmVd4y.s:560    .text:00000000000002d4 .LVL63
     /tmp/ccqmVd4y.s:565    .text:00000000000002e0 .LVL64
     /tmp/ccqmVd4y.s:570    .text:00000000000002ec .LVL65
GAS LISTING /tmp/ccqmVd4y.s 			page 37


     /tmp/ccqmVd4y.s:575    .text:00000000000002f8 .LVL66
     /tmp/ccqmVd4y.s:580    .text:0000000000000304 .LVL67
     /tmp/ccqmVd4y.s:585    .text:0000000000000310 .LVL68
     /tmp/ccqmVd4y.s:599    .text:0000000000000320 .LVL70
     /tmp/ccqmVd4y.s:604    .text:000000000000032c .LVL71
     /tmp/ccqmVd4y.s:609    .text:0000000000000338 .LVL72
     /tmp/ccqmVd4y.s:614    .text:0000000000000344 .LVL73
     /tmp/ccqmVd4y.s:619    .text:0000000000000350 .LVL74
     /tmp/ccqmVd4y.s:624    .text:000000000000035c .LVL75
     /tmp/ccqmVd4y.s:629    .text:0000000000000368 .LVL76
     /tmp/ccqmVd4y.s:683    .text:00000000000003cc .LVL86
     /tmp/ccqmVd4y.s:690    .text:00000000000003d0 .LBB18
     /tmp/ccqmVd4y.s:900    .text:0000000000000594 .LBE18
     /tmp/ccqmVd4y.s:4169   .debug_loc:0000000000000576 .LLST9
     /tmp/ccqmVd4y.s:846    .text:0000000000000530 .LBB19
     /tmp/ccqmVd4y.s:890    .text:0000000000000570 .LBE19
     /tmp/ccqmVd4y.s:4176   .debug_loc:0000000000000599 .LLST10
     /tmp/ccqmVd4y.s:4188   .debug_loc:00000000000005d0 .LLST11
     /tmp/ccqmVd4y.s:859    .text:0000000000000544 .LVL121
     /tmp/ccqmVd4y.s:885    .text:000000000000056c .LVL125
     /tmp/ccqmVd4y.s:695    .text:00000000000003dc .LVL88
     /tmp/ccqmVd4y.s:700    .text:00000000000003e8 .LVL89
     /tmp/ccqmVd4y.s:705    .text:00000000000003f4 .LVL90
     /tmp/ccqmVd4y.s:710    .text:0000000000000400 .LVL91
     /tmp/ccqmVd4y.s:715    .text:000000000000040c .LVL92
     /tmp/ccqmVd4y.s:720    .text:0000000000000418 .LVL93
     /tmp/ccqmVd4y.s:725    .text:0000000000000424 .LVL94
     /tmp/ccqmVd4y.s:730    .text:0000000000000430 .LVL95
     /tmp/ccqmVd4y.s:735    .text:000000000000043c .LVL96
     /tmp/ccqmVd4y.s:740    .text:0000000000000448 .LVL97
     /tmp/ccqmVd4y.s:745    .text:0000000000000454 .LVL98
     /tmp/ccqmVd4y.s:750    .text:0000000000000460 .LVL99
     /tmp/ccqmVd4y.s:755    .text:000000000000046c .LVL100
     /tmp/ccqmVd4y.s:760    .text:0000000000000478 .LVL101
     /tmp/ccqmVd4y.s:765    .text:0000000000000484 .LVL102
     /tmp/ccqmVd4y.s:770    .text:0000000000000490 .LVL103
     /tmp/ccqmVd4y.s:775    .text:000000000000049c .LVL104
     /tmp/ccqmVd4y.s:780    .text:00000000000004a8 .LVL105
     /tmp/ccqmVd4y.s:785    .text:00000000000004b4 .LVL106
     /tmp/ccqmVd4y.s:790    .text:00000000000004c0 .LVL107
     /tmp/ccqmVd4y.s:795    .text:00000000000004cc .LVL108
     /tmp/ccqmVd4y.s:800    .text:00000000000004d8 .LVL109
     /tmp/ccqmVd4y.s:814    .text:00000000000004e8 .LVL111
     /tmp/ccqmVd4y.s:819    .text:00000000000004f4 .LVL112
     /tmp/ccqmVd4y.s:824    .text:0000000000000500 .LVL113
     /tmp/ccqmVd4y.s:829    .text:000000000000050c .LVL114
     /tmp/ccqmVd4y.s:834    .text:0000000000000518 .LVL115
     /tmp/ccqmVd4y.s:839    .text:0000000000000524 .LVL116
     /tmp/ccqmVd4y.s:844    .text:0000000000000530 .LVL117
     /tmp/ccqmVd4y.s:898    .text:0000000000000594 .LVL127
     /tmp/ccqmVd4y.s:226    .text:00000000000000a8 .LBB28
     /tmp/ccqmVd4y.s:231    .text:00000000000000a8 .LBE28
     /tmp/ccqmVd4y.s:302    .text:00000000000000fc .LBB30
     /tmp/ccqmVd4y.s:306    .text:00000000000000fc .LBE30
     /tmp/ccqmVd4y.s:131    .text:0000000000000080 .LVL9
     /tmp/ccqmVd4y.s:237    .text:00000000000000c0 .LVL13
     /tmp/ccqmVd4y.s:312    .text:0000000000000114 .LVL21
GAS LISTING /tmp/ccqmVd4y.s 			page 38


     /tmp/ccqmVd4y.s:322    .text:0000000000000124 .LVL23
     /tmp/ccqmVd4y.s:331    .text:0000000000000140 .LVL24
     /tmp/ccqmVd4y.s:340    .text:000000000000014c .LVL26
     /tmp/ccqmVd4y.s:349    .text:0000000000000158 .LVL28
     /tmp/ccqmVd4y.s:366    .text:0000000000000178 .LVL30
     /tmp/ccqmVd4y.s:382    .text:0000000000000190 .LVL32
     /tmp/ccqmVd4y.s:397    .text:00000000000001a4 .LVL34
     /tmp/ccqmVd4y.s:412    .text:00000000000001b8 .LVL36
     /tmp/ccqmVd4y.s:427    .text:00000000000001cc .LVL38
     /tmp/ccqmVd4y.s:441    .text:00000000000001dc .LVL40
     /tmp/ccqmVd4y.s:445    .text:00000000000001e8 .LVL41
     /tmp/ccqmVd4y.s:454    .text:00000000000001f4 .LVL43
     /tmp/ccqmVd4y.s:464    .text:0000000000000204 .LVL45
     /tmp/ccqmVd4y.s:908    .text:00000000000005a4 .LVL129
     /tmp/ccqmVd4y.s:912    .text:00000000000005ac .LVL130
     /tmp/ccqmVd4y.s:915    .text:00000000000005b4 .LVL131
     /tmp/ccqmVd4y.s:4354   .debug_str:000000000000024f .LASF112
     /tmp/ccqmVd4y.s:4454   .debug_str:0000000000000511 .LASF113
     /tmp/ccqmVd4y.s:4336   .debug_str:00000000000001e2 .LASF114
     /tmp/ccqmVd4y.s:4474   .debug_str:0000000000000593 .LASF115
     /tmp/ccqmVd4y.s:4352   .debug_str:0000000000000248 .LASF116
     /tmp/ccqmVd4y.s:76     .text:000000000000003c .LVL4
     /tmp/ccqmVd4y.s:112    .text:0000000000000058 .LVL8
     /tmp/ccqmVd4y.s:137    .text:0000000000000084 .LVL10
     /tmp/ccqmVd4y.s:145    .text:0000000000000090 .LVL12
     /tmp/ccqmVd4y.s:70     .text:0000000000000038 .LVL3
     /tmp/ccqmVd4y.s:283    .text:00000000000000e8 .LVL16
     /tmp/ccqmVd4y.s:296    .text:00000000000000fc .LVL20
     /tmp/ccqmVd4y.s:64     .text:0000000000000034 .LVL2
     /tmp/ccqmVd4y.s:286    .text:00000000000000ec .LVL17
     /tmp/ccqmVd4y.s:58     .text:0000000000000030 .LVL1
     /tmp/ccqmVd4y.s:289    .text:00000000000000f0 .LVL18
     /tmp/ccqmVd4y.s:52     .text:000000000000002c .LVL0
     /tmp/ccqmVd4y.s:292    .text:00000000000000f4 .LVL19
     /tmp/ccqmVd4y.s:83     .text:0000000000000040 .LVL5
     /tmp/ccqmVd4y.s:142    .text:0000000000000088 .LVL11
     /tmp/ccqmVd4y.s:315    .text:0000000000000118 .LVL22
     /tmp/ccqmVd4y.s:334    .text:0000000000000144 .LVL25
     /tmp/ccqmVd4y.s:343    .text:0000000000000150 .LVL27
     /tmp/ccqmVd4y.s:357    .text:0000000000000160 .LVL29
     /tmp/ccqmVd4y.s:374    .text:0000000000000180 .LVL31
     /tmp/ccqmVd4y.s:390    .text:0000000000000198 .LVL33
     /tmp/ccqmVd4y.s:405    .text:00000000000001ac .LVL35
     /tmp/ccqmVd4y.s:420    .text:00000000000001c0 .LVL37
     /tmp/ccqmVd4y.s:435    .text:00000000000001d4 .LVL39
     /tmp/ccqmVd4y.s:448    .text:00000000000001ec .LVL42
     /tmp/ccqmVd4y.s:457    .text:00000000000001f8 .LVL44
     /tmp/ccqmVd4y.s:472    .text:000000000000020c .LVL46
     /tmp/ccqmVd4y.s:477    .text:0000000000000214 .LVL47
     /tmp/ccqmVd4y.s:687    .text:00000000000003d0 .LVL87
     /tmp/ccqmVd4y.s:902    .text:0000000000000598 .LVL128
     /tmp/ccqmVd4y.s:90     .text:0000000000000044 .LVL6
     /tmp/ccqmVd4y.s:266    .text:00000000000000d4 .LVL15
     /tmp/ccqmVd4y.s:593    .text:0000000000000314 .LVL69
     /tmp/ccqmVd4y.s:808    .text:00000000000004dc .LVL110
     /tmp/ccqmVd4y.s:97     .text:0000000000000048 .LVL7
     /tmp/ccqmVd4y.s:250    .text:00000000000000c8 .LVL14
GAS LISTING /tmp/ccqmVd4y.s 			page 39


     /tmp/ccqmVd4y.s:634    .text:000000000000036c .LVL77
     /tmp/ccqmVd4y.s:849    .text:0000000000000534 .LVL118
     /tmp/ccqmVd4y.s:636    .text:0000000000000370 .LVL78
     /tmp/ccqmVd4y.s:642    .text:0000000000000374 .LVL79
     /tmp/ccqmVd4y.s:649    .text:0000000000000380 .LVL81
     /tmp/ccqmVd4y.s:661    .text:0000000000000390 .LVL82
     /tmp/ccqmVd4y.s:668    .text:000000000000039c .LVL83
     /tmp/ccqmVd4y.s:672    .text:00000000000003a8 .LVL85
     /tmp/ccqmVd4y.s:851    .text:0000000000000538 .LVL119
     /tmp/ccqmVd4y.s:857    .text:000000000000053c .LVL120
     /tmp/ccqmVd4y.s:864    .text:0000000000000548 .LVL122
     /tmp/ccqmVd4y.s:876    .text:0000000000000558 .LVL123
     /tmp/ccqmVd4y.s:883    .text:0000000000000564 .LVL124
     /tmp/ccqmVd4y.s:887    .text:0000000000000570 .LVL126
     /tmp/ccqmVd4y.s:949    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccqmVd4y.s:853    .text:0000000000000538 .LBB20
     /tmp/ccqmVd4y.s:861    .text:0000000000000544 .LBE20
     /tmp/ccqmVd4y.s:868    .text:000000000000054c .LBB21
     /tmp/ccqmVd4y.s:889    .text:0000000000000570 .LBE21
     /tmp/ccqmVd4y.s:638    .text:0000000000000370 .LBB24
     /tmp/ccqmVd4y.s:646    .text:000000000000037c .LBE24
     /tmp/ccqmVd4y.s:653    .text:0000000000000384 .LBB25
     /tmp/ccqmVd4y.s:674    .text:00000000000003a8 .LBE25

UNDEFINED SYMBOLS
__putc
_ZN11HeapManager8instanceE
_ZN11HeapManager12heapAllocateEm
_ZN11HeapManager8heapFreeEPv
_ZN7_thread6createEPPS_PFvPvES2_S2_b
_ZN7_thread4exitEv
_ZN7_thread8dispatchEv
_ZN7_thread13currentThreadE
_ZN7_thread4joinEPS_
_ZN4_sem4openEPPS_j
_ZN4_sem5closeEPS_
_ZN4_sem4waitEPS_
_ZN4_sem6signalEPS_
_ZN5Timer11getInstanceEv
_ZN5Timer5sleepEm
__getc
_Z13assert_failedPKcS0_jS0_
_ZN5Timer4tickEv
